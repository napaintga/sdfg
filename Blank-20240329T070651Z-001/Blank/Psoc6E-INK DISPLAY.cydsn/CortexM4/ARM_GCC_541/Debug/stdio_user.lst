ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"stdio_user.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.STDIO_PutChar,"ax",%progbits
  21              		.align	2
  22              		.global	STDIO_PutChar
  23              		.thumb
  24              		.thumb_func
  25              		.type	STDIO_PutChar, %function
  26              	STDIO_PutChar:
  27              	.LFB234:
  28              		.file 1 "stdio_user.c"
   1:stdio_user.c  **** /***************************************************************************//**
   2:stdio_user.c  **** * \file stdio_user.c
   3:stdio_user.c  **** * \version 1.10
   4:stdio_user.c  **** *
   5:stdio_user.c  **** * \brief
   6:stdio_user.c  **** * This file provides low level function implementation to retarget
   7:stdio_user.c  **** * I/O functions of the standard C run-time library.
   8:stdio_user.c  **** *
   9:stdio_user.c  **** ********************************************************************************
  10:stdio_user.c  **** * \copyright
  11:stdio_user.c  **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  12:stdio_user.c  **** * You may use this file only in accordance with the license, terms, conditions,
  13:stdio_user.c  **** * disclaimers, and limitations in the end user license agreement accompanying
  14:stdio_user.c  **** * the software package with which this file was provided.
  15:stdio_user.c  **** *******************************************************************************/
  16:stdio_user.c  **** 
  17:stdio_user.c  **** #include "stdio_user.h"
  18:stdio_user.c  **** 
  19:stdio_user.c  **** #if defined(__cplusplus)
  20:stdio_user.c  **** extern "C" {
  21:stdio_user.c  **** #endif
  22:stdio_user.c  **** 
  23:stdio_user.c  **** #if defined (IO_STDOUT_ENABLE) && defined (IO_STDOUT_UART)
  24:stdio_user.c  **** /*******************************************************************************
  25:stdio_user.c  **** * Function Name: STDIO_PutChar
  26:stdio_user.c  **** ********************************************************************************
  27:stdio_user.c  **** *
  28:stdio_user.c  **** * This function outputs a character through user defined target.
  29:stdio_user.c  **** * Note: this is a template function which may be overwritten by the USER in order
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 2


  30:stdio_user.c  **** * to change the target used in redirecting STDOUT stream.
  31:stdio_user.c  **** *
  32:stdio_user.c  **** * \param ch
  33:stdio_user.c  **** * The character to send.
  34:stdio_user.c  **** *
  35:stdio_user.c  **** *******************************************************************************/
  36:stdio_user.c  **** void STDIO_PutChar(uint32_t ch)
  37:stdio_user.c  **** {
  29              		.loc 1 37 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 10B5     		push	{r4, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 0446     		mov	r4, r0
  39              	.LVL1:
  40              	.L2:
  41              	.LBB16:
  42              	.LBB17:
  43              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_uart.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \file cy_scb_uart.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \version 2.10
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Provides UART API declarations of the SCB driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \addtogroup group_scb_uart
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Driver API for UART
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * UART - Universal Synchronous/Asynchronous Receiver/Transmitter,
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * commonly referred to as RS-232.
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Three different UART-like serial interface protocols are supported:
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * UART - the standard mode with an optional UART Hardware flow control.
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * SmartCard - the transfer is similar to the UART transfer,
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   but a NACK (negative acknowledgment) may be sent from the
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   receiver to the transmitter. Both transmitter and receiver drive the same
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   line, although never at the same time.
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * IrDA - the Infra-red Data Association protocol adds a modulation
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   scheme to the UART signaling. At the transmitter, bits are modulated.
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   At the receiver, bits are demodulated. The modulation scheme uses the
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   Return-to-Zero-Inverted (RZI) format. Bit value "0" is signaled by a
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   short "1" pulse on the line and bit value "1" is signaled by holding
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   the line to "0".
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 3


  35:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \section group_scb_uart_configuration Configuration Considerations
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The UART driver configuration can be divided to number of sequential
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * steps listed below:
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * \ref group_scb_uart_config
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * \ref group_scb_uart_pins
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * \ref group_scb_uart_clock
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * \ref group_scb_uart_data_rate
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * \ref group_scb_uart_intr
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * \ref group_scb_uart_enable
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \note
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * UART driver is built on top of the SCB hardware block. The SCB5 instance is
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * used as an example for all code snippets. Modify the code to match your
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * design.
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \subsection group_scb_uart_config Configure UART
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * To set up the UART slave driver, provide the configuration parameters in the
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \ref cy_stc_scb_uart_config_t structure. For example: provide uartMode,
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * oversample, dataWidth, enableMsbFirst, parity, and stopBits. The other
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * parameters are optional for operation. To initialize the driver,
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * call \ref Cy_SCB_UART_Init function providing a pointer to the filled
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \ref cy_stc_scb_uart_config_t structure and allocated \ref cy_stc_scb_uart_context_t.
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_CFG
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \subsection group_scb_uart_pins Assign and Configure Pins
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Only dedicated SCB pins can be used for UART operation. The HSIOM
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * register must be configured to connect the block to the pins. Also the UART output
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * pins must be configured in Strong Drive mode and UART input pins in
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Digital High-Z:
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_CFG_PINS
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \note
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The SCB stops driving pins when it is disabled or enters low power mode (except
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Alternate Active or Sleep). To keep the pins' states, they should be reconfigured or
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * be frozen.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \subsection group_scb_uart_clock Assign Clock Divider
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The clock source must be connected to the SCB block to oversample input and
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * output signals. You must use one of the 8-bit or 16-bit dividers <em><b>(the
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * source clock of this divider must be Clk_Peri)</b></em>. Use the \ref group_sysclk
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * driver API to do that.
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_CFG_ASSIGN_CLOCK
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \subsection group_scb_uart_data_rate Configure Baud Rate
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * To get the UART to operate with the desired baud rate, the source clock frequency
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * and the oversample must be configured. Use the \ref group_sysclk driver API
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * to configure source clock frequency. Set the <em><b>oversample parameter
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * in configuration structure</b></em> to define the number of the SCB clocks
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * within one UART bit-time.
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_CFG_DATA_RATE
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Refer to the technical reference manual (TRM) section UART sub-section
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 4


  92:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Clocking and Oversampling to get information about how to configure the UART to run with
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * desired baud rate.
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \subsection group_scb_uart_intr Configure Interrupt
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The interrupt is optional for the UART operation. To configure interrupt
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * the \ref Cy_SCB_UART_Interrupt function must be called in the interrupt
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * handler for the selected SCB instance. Also, this interrupt must be enabled
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * in the NVIC.
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_INTR_A
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_INTR_B
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \subsection group_scb_uart_enable Enable UART
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Finally, enable the UART operation calling \ref Cy_SCB_UART_Enable.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_ENABLE
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \section group_scb_uart_use_cases Common Use Cases
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The UART API is divided into two categories: \ref group_scb_spi_low_level_functions
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * and \ref group_scb_spi_high_level_functions. \n
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * <em>Do not mix <b>High-Level</b> and <b>Low-Level</b> API because a Low-Level
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * API can adversely affect the operation of a High-Level API.</em>
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \subsection group_scb_uart_ll Low-Level API
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The \ref group_scb_uart_low_level_functions API allows
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * interacting directly with the hardware and do not use interrupt.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * These functions do not require context for operation, thus NULL can be
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * passed in \ref Cy_SCB_UART_Init and \ref Cy_SCB_UART_Disable instead of
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * a pointer to the context structure.
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * To write data into the TX FIFO, use one of the provided functions:
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   \ref Cy_SCB_UART_Put, \ref Cy_SCB_UART_PutArray,
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   \ref Cy_SCB_UART_PutArrayBlocking or \ref Cy_SCB_UART_PutString.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   Note that putting data into the TX FIFO starts data transfer.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * To read data from the RX FIFO, use one of the provided functions:
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   \ref Cy_SCB_UART_Get, \ref Cy_SCB_UART_GetArray or
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   \ref Cy_SCB_UART_GetArrayBlocking.
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * The statuses can be polled using: \ref Cy_SCB_UART_GetRxFifoStatus and
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   \ref Cy_SCB_UART_GetTxFifoStatus.
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   <em>The statuses are <b>W1C (Write 1 to Clear)</b> and after a status
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   is set, it must be cleared.</em> Note that there are statuses evaluated as level.
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   These statuses remain set until an event is true. Therefore, after the clear
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   operation, the status is cleared but then it is restored (if event is still
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   true).
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   For example: the TX FIFO empty interrupt source can be cleared when the
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   TX FIFO is not empty. Put at least two data elements (one goes to the
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   shifter and next to FIFO) before clearing this status. \n
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   Also, following functions can be used for polling as well
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   \ref Cy_SCB_UART_IsTxComplete, \ref Cy_SCB_UART_GetNumInRxFifo and
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   \ref Cy_SCB_UART_GetNumInTxFifo.
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_TRANSMIT_DATA_LL
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \subsection group_scb_uart_hl High-Level API
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 5


 149:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The \ref group_scb_uart_high_level_functions API uses an interrupt to
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * execute transfer. Call \ref Cy_SCB_UART_Transmit to start transmission.
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Call \ref Cy_SCB_UART_Receive to start receive operation. After the
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * operation is started the \ref Cy_SCB_UART_Interrupt handles the data
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * transfer until its completion.
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Therefore \ref Cy_SCB_UART_Interrupt must be called inside the
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * interrupt handler to make the High-Level API work. To monitor status
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * of transmit operation, use \ref Cy_SCB_UART_GetTransmitStatus and
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \ref Cy_SCB_UART_GetReceiveStatus to monitor receive status appropriately.
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Alternatively use \ref Cy_SCB_UART_RegisterCallback to register callback
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * function to be notified about \ref group_scb_uart_macros_callback_events.
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * <b>Receive Operation</b>
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_RECEIVE_DATA_HL
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * <b>Transmit Operation</b>
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_TRANSMIT_DATA_HL
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * There is also capability to insert a receive ring buffer that operates between
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * the RX FIFO and the user buffer. The received data is copied into the ring
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * buffer from the RX FIFO. This process runs in the background after the ring
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * buffer operation is started by \ref Cy_SCB_UART_StartRingBuffer.
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * When \ref Cy_SCB_UART_Receive is called, it first reads data from the ring
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * buffer and then sets up an interrupt to receive more data if the required
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * amount has not yet been read.
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \section group_scb_uart_dma_trig DMA Trigger
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The SCB provides TX and RX output trigger signals that can be routed to the
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * DMA controller inputs. These signals are assigned based on the data availability
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * in the TX and RX FIFOs appropriately.
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * The RX trigger signal remains active until the number of data
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   elements in the RX FIFO is greater than the value of RX FIFO level. Use
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   function \ref Cy_SCB_SetRxFifoLevel or set configuration structure
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   rxFifoTriggerLevel parameter to configure RX FIFO level value. \n
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   <em>For example, the RX FIFO has 8 data elements and the RX FIFO level is 0.
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   The RX trigger signal remains active until DMA does not read all data from
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   the RX FIFO.</em>
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * The TX trigger signal remains active until the number of data elements
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   in the TX FIFO is less than the value of TX FIFO level. Use function
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   \ref Cy_SCB_SetTxFifoLevel or set configuration structure txFifoTriggerLevel
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   parameter to configure TX FIFO level value. \n
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   <em>For example, the TX FIFO has 0 data elements (empty) and the TX FIFO level
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   is 7. The TX trigger signal remains active until DMA does not load TX FIFO
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   with 7 data elements (note that after the first TX load operation, the data 
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   element goes to the shift register and TX FIFO remains empty).</em>
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * To route SCB TX or RX trigger signals to DMA controller use \ref group_trigmux
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * driver API.
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \note
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * To properly handle DMA level request signal activation and de-activation from the SCB
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * peripheral block the DMA Descriptor typically must be configured to re-trigger
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * after 16 Clk_Slow cycles.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \section group_scb_uart_lp Low Power Support
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 6


 206:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The UART driver provides the callback functions to handle power mode
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * transition. The callback \ref Cy_SCB_UART_DeepSleepCallback must be called
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * during execution of \ref Cy_SysPm_DeepSleep; \ref Cy_SCB_UART_HibernateCallback
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * must be called during execution of \ref Cy_SysPm_Hibernate. To trigger the
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * callback execution, the callback must be registered before calling the
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * power mode transition function. Refer to \ref group_syspm driver for more
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * information about power mode transitions and callback registration.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The UART is disabled during Deep Sleep and Hibernate and stops driving 
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * the output pins. The state of the UART output pins TX and RTS is High-Z, 
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * which can cause unexpected behavior of the UART receiver due to possible
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * glitches on these lines. These pins must be set to the inactive state before 
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * entering Deep Sleep or Hibernate mode. To do that, configure the UART  
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * pins output to drive the inactive state and High-Speed Input Output 
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Multiplexer (HSIOM) to control output by GPIO (use \ref group_gpio 
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * driver API). The pins configuration must be restored after exiting Deep Sleep 
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * mode to return the UART control of the pins (after exiting Hibernate mode, 
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * the system init code does the same). 
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Note that the UART must be enabled to drive the pins during configuration 
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * change not to cause glitches on the lines. Copy either or both 
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \ref Cy_SCB_UART_DeepSleepCallback and \ref Cy_SCB_UART_HibernateCallback as 
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * appropriate, and make the changes described above inside the function.
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Alternately, external pull-up or pull-down resistors can be connected 
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * to the appropriate UART lines to keep them inactive during Deep-Sleep or 
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Hibernate.
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \section group_scb_uart_more_information More Information
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * For more information on the SCB peripheral, refer to the technical reference
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * manual (TRM).
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \section group_scb_uart_MISRA MISRA-C Compliance
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * <table class="doxtable">
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   <tr>
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <th>MISRA Rule</th>
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <th>Rule Class (Required/Advisory)</th>
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <th>Rule Description</th>
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <th>Description of Deviation(s)</th>
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   </tr>
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   <tr>
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>11.4</td>
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>A</td>
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>A cast should not be performed between a pointer to object type and
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         a different pointer to object type.</td>
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         * The pointer to the buffer memory is void to allow handling different
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         different data types: uint8_t (4-8 bits) or uint16_t (9-16 bits).
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         The cast operation is safe because the configuration is verified
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         before operation is performed.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         * The functions \ref Cy_SCB_UART_DeepSleepCallback and
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         \ref Cy_SCB_UART_HibernateCallback are callback of
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         \ref cy_en_syspm_status_t type. The cast operation safety in these
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         functions becomes the user's responsibility because pointers are
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         initialized when callback is registered in SysPm driver.</td>
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   </tr>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   <tr>
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>14.2</td>
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 7


 263:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>R</td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>All non-null statements shall either: a) have at least one side-effect
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         however executed, or b) cause control flow to change.</td>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>The unused function parameters are cast to void. This statement
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         has no side-effect and is used to suppress a compiler warning.</td>
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   </tr>
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   <tr>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>14.7</td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>R</td>
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>A function shall have a single point of exit at the end of the
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         function.</td>
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>The functions can return from several points. This is done to improve
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         code clarity when returning error status code if input parameters
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         validation fails.</td>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   </tr>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * </table>
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \section group_scb_uart_changelog Changelog
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * <table class="doxtable">
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>2.10</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>None.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>SCB I2C driver updated.</td>
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   </tr>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   <tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td rowspan="5">2.0</td>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>Added parameters validation for public API.</td>
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td></td>
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   </tr>
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   <tr>
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>Replaced variables that have limited range of values with enumerated
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         types.</td>
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td></td>
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   </tr>
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   <tr>
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>Added missing "cy_cb_" to the callback function type names.</td>
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td></td>
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   </tr>
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   <tr>
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>Added function \ref Cy_SCB_UART_SendBreakBlocking for break condition
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         generation.</td>
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td></td>
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   </tr>
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   <tr>
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>Fixed low power callbacks \ref Cy_SCB_UART_DeepSleepCallback and
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         \ref Cy_SCB_UART_HibernateCallback to prevent the device from entering
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         low power mode when RX FIFO is not empty.</td>
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>The callbacks allowed entering device into low power mode when RX FIFO
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         had data.</td>
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   </tr>
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   <tr>
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>1.0</td>
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td>Initial version.</td>
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *     <td></td>
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   </tr>
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * </table>
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 8


 320:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \defgroup group_scb_uart_macros Macros
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \defgroup group_scb_uart_functions Functions
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \defgroup group_scb_uart_general_functions General
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \defgroup group_scb_uart_high_level_functions High-Level
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \defgroup group_scb_uart_low_level_functions Low-Level
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \defgroup group_scb_uart_interrupt_functions Interrupt
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \defgroup group_scb_uart_low_power_functions Low Power Callbacks
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \}
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \defgroup group_scb_uart_data_structures Data Structures
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \defgroup group_scb_uart_enums Enumerated Types
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #if !defined(CY_SCB_UART_H)
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_H
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #include "cy_scb_common.h"
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #if defined(__cplusplus)
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** extern "C" {
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #endif
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /***************************************
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *          Enumerated Types
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ***************************************/
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_enums
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** UART status codes */
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** typedef enum
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /** Operation completed successfully */
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_SUCCESS = 0U,
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /** One or more of input parameters are invalid */
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_BAD_PARAM = (CY_SCB_ID | CY_PDL_STATUS_ERROR | CY_SCB_UART_ID | 1U),
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * The UART is busy processing a transmit operation.
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Call \ref Cy_SCB_UART_Receive function again once that operation
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * is completed or aborted.
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_RECEIVE_BUSY = (CY_SCB_ID | CY_PDL_STATUS_ERROR | CY_SCB_UART_ID | 2U),
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * The UART is busy processing a receive operation.
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Call \ref Cy_SCB_UART_Transmit function again once that operation
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * is completed or aborted.
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_TRANSMIT_BUSY = (CY_SCB_ID | CY_PDL_STATUS_ERROR | CY_SCB_UART_ID | 3U)
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** } cy_en_scb_uart_status_t;
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** UART Mode */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 9


 377:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** typedef enum
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_STANDARD  = 0U, /**< Configures the SCB for Standard UART operation */
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_SMARTCARD = 1U, /**< Configures the SCB for SmartCard operation */
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_IRDA      = 2U, /**< Configures the SCB for IrDA operation */
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** } cy_en_scb_uart_mode_t;
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** UART Stop Bits */
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** typedef enum
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_STOP_BITS_1   = 2U,  /**< UART looks for 1 Stop Bit    */
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_STOP_BITS_1_5 = 3U,  /**< UART looks for 1.5 Stop Bits */
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_STOP_BITS_2   = 4U,  /**< UART looks for 2 Stop Bits   */
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_STOP_BITS_2_5 = 5U,  /**< UART looks for 2.5 Stop Bits */
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_STOP_BITS_3   = 6U,  /**< UART looks for 3 Stop Bits   */
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_STOP_BITS_3_5 = 7U,  /**< UART looks for 3.5 Stop Bits */
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_STOP_BITS_4   = 8U,  /**< UART looks for 4 Stop Bits   */
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** } cy_en_scb_uart_stop_bits_t;
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** UART Parity */
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** typedef enum
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_PARITY_NONE = 0U,    /**< UART has no parity check   */
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_PARITY_EVEN = 2U,    /**< UART has even parity check */
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_PARITY_ODD  = 3U,    /**< UART has odd parity check  */
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** } cy_en_scb_uart_parity_t;
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** UART Polarity */
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** typedef enum
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_ACTIVE_LOW  = 0U,   /**< Signal is active low */
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_SCB_UART_ACTIVE_HIGH = 1U,   /**< Signal is active high */
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** } cy_en_scb_uart_polarity_t;
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \} group_scb_uart_enums */
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /***************************************
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *       Type Definitions
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ***************************************/
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_data_structures
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Provides the typedef for the callback function called in the
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \ref Cy_SCB_UART_Interrupt to notify the user about occurrences of
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \ref group_scb_uart_macros_callback_events.
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** typedef void (* cy_cb_scb_uart_handle_events_t)(uint32_t event);
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** UART configuration structure */
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** typedef struct stc_scb_uart_config
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /** Specifies the UART's mode of operation */
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     cy_en_scb_uart_mode_t    uartMode;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 10


 434:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Oversample factor for UART.
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * * The UART baud rate is the SCB Clock frequency / oversample
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     *  (valid range is 8-16).
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * * For IrDA, the oversample is always 16, unless
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * \ref irdaEnableLowPowerReceiver is enabled. Then the oversample is
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * reduced to the \ref group_scb_uart_macros_irda_lp_ovs set.
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t    oversample;
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /** The width of UART data (valid range is 5 to 9) */
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t    dataWidth;
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Enables the hardware to shift out data element MSB first; otherwise,
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * LSB first
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     bool        enableMsbFirst;
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Specifies the number of stop bits in the UART transaction, in half-bit
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * increments
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     cy_en_scb_uart_stop_bits_t    stopBits;
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /** Configures the UART parity */
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     cy_en_scb_uart_parity_t    parity;
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Enables a digital 3-tap median filter to be applied to the input
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * of the RX FIFO to filter glitches on the line (for IrDA, this parameter
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * is ignored)
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     bool        enableInputFilter;
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Enables the hardware to drop data in the RX FIFO when a parity error is
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * detected
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     bool        dropOnParityError;
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Enables the hardware to drop data in the RX FIFO when a frame error is
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * detected
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     bool        dropOnFrameError;
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Enables the UART operation in Multi-Processor mode which requires
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * dataWidth to be 9 bits (the 9th bit is used to indicate address byte)
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     bool        enableMutliProcessorMode;
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * If Multi Processor mode is enabled, this is the address of the RX
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 11


 491:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * FIFO. If the address matches, data is accepted into the FIFO. If
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * it does not match, the data is ignored.
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t    receiverAddress;
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * This is the address mask for the Multi Processor address. 1 indicates
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * that the incoming address must match the corresponding bit in the slave
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * address. A 0 in the mask indicates that the incoming address does
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * not need to match.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t    receiverAddressMask;
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Enables the hardware to accept the matching address in the RX FIFO.
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * This is useful when the device supports more than one address.
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     bool        acceptAddrInFifo;
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /** Inverts the IrDA RX input */
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     bool        irdaInvertRx;
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Enables the low-power receive for IrDA mode.
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Note that the transmission must be disabled if this mode is enabled.
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     bool        irdaEnableLowPowerReceiver;
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Enables retransmission of the frame placed in the TX FIFO when
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * NACK is received in SmartCard mode (for Standard and IrDA , this parameter
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * is ignored)
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     bool        smartCardRetryOnNack;
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Enables the usage of the CTS input signal for the transmitter. The
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * transmitter waits for CTS to be active before sending data
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     bool        enableCts;
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /** Sets the CTS Polarity */
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     cy_en_scb_uart_polarity_t    ctsPolarity;
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * When the RX FIFO has fewer entries than rtsRxFifoLevel, the
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * RTS signal is active (note to disable RTS, set this field to zero)
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t    rtsRxFifoLevel;
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /** Sets the RTS Polarity */
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     cy_en_scb_uart_polarity_t    rtsPolarity;
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /** Specifies the number of bits to detect a break condition */
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t    breakWidth;
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 12


 548:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * When there are more entries in the RX FIFO than this level
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * the RX trigger output goes high. This output can be connected
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * to a DMA channel through a trigger mux.
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Also, it controls the \ref CY_SCB_UART_RX_TRIGGER interrupt source.
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t    rxFifoTriggerLevel;
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * The bits set in this mask allow the event to cause an interrupt
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * (See \ref group_scb_uart_macros_rx_fifo_status for the set of constants)
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t    rxFifoIntEnableMask;
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * When there are fewer entries in the TX FIFO then this level
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * the TX trigger output goes high. This output can be connected
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * to a DMA channel through a trigger mux.
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Also, it controls \ref CY_SCB_UART_TX_TRIGGER interrupt source.
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t    txFifoTriggerLevel;
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /**
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * Bits set in this mask allows the event to cause an interrupt
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * (See \ref group_scb_uart_macros_tx_fifo_status for the set of constants)
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t    txFifoIntEnableMask;
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** } cy_stc_scb_uart_config_t;
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** UART context structure.
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * All fields for the context structure are internal. Firmware never reads or
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * writes these values. Firmware allocates the structure and provides the
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * address of the structure to the driver in function calls. Firmware must
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * ensure that the defined instance of this structure remains in scope
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * while the drive is in use.
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** typedef struct cy_stc_scb_uart_context
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /** \cond INTERNAL */
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t volatile txStatus;         /**< The transmit status */
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t volatile rxStatus;         /**< The receive status */
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     void     *rxRingBuf;                /**< The pointer to the ring buffer */
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t  rxRingBufSize;            /**< The ring buffer size */
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t volatile rxRingBufHead;    /**< The ring buffer head index */
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t volatile rxRingBufTail;    /**< The ring buffer tail index */
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     void     *rxBuf;                    /**< The pointer to the receive buffer */
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t  rxBufSize;                /**< The receive buffer size */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t volatile rxBufIdx;         /**< The current location in the receive buffer */
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     void     *txBuf;                    /**< The pointer to the transmit buffer */
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t  txBufSize;                /**< The transmit buffer size */
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t volatile txLeftToTransmit; /**< The number of data elements left to be transmitted */
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /** The pointer to an event callback that is called when any of
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     * \ref group_scb_uart_macros_callback_events occurs
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 13


 605:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     cy_cb_scb_uart_handle_events_t cbEvents;
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #if !defined(NDEBUG)
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     uint32_t initKey;               /**< Tracks the context initialization */
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #endif /* !(NDEBUG) */
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     /** \endcond */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** } cy_stc_scb_uart_context_t;
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \} group_scb_uart_data_structures */
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /***************************************
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *        Function Prototypes
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ***************************************/
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_general_functions
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** cy_en_scb_uart_status_t Cy_SCB_UART_Init(CySCB_Type *base, cy_stc_scb_uart_config_t const *config,
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                          cy_stc_scb_uart_context_t *context);
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** void Cy_SCB_UART_DeInit (CySCB_Type *base);
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_Enable(CySCB_Type *base);
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** void Cy_SCB_UART_Disable(CySCB_Type *base, cy_stc_scb_uart_context_t *context);
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_EnableCts      (CySCB_Type *base);
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_DisableCts     (CySCB_Type *base);
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_SetRtsFifoLevel(CySCB_Type *base, uint32_t level);
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetRtsFifoLevel(CySCB_Type const *base);
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_EnableSkipStart (CySCB_Type *base);
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_DisableSkipStart(CySCB_Type *base);
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \} group_scb_uart_general_functions */
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_high_level_functions
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** void     Cy_SCB_UART_StartRingBuffer   (CySCB_Type *base, void *buffer, uint32_t size,
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                         cy_stc_scb_uart_context_t *context);
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** void     Cy_SCB_UART_StopRingBuffer    (CySCB_Type *base, cy_stc_scb_uart_context_t *context);
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** uint32_t Cy_SCB_UART_GetNumInRingBuffer(CySCB_Type const *base, cy_stc_scb_uart_context_t const *co
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** void     Cy_SCB_UART_ClearRingBuffer   (CySCB_Type const *base, cy_stc_scb_uart_context_t *context)
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** cy_en_scb_uart_status_t Cy_SCB_UART_Receive(CySCB_Type *base, void *buffer, uint32_t size,
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                             cy_stc_scb_uart_context_t *context);
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** void     Cy_SCB_UART_AbortReceive    (CySCB_Type *base, cy_stc_scb_uart_context_t *context);
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** uint32_t Cy_SCB_UART_GetReceiveStatus(CySCB_Type const *base, cy_stc_scb_uart_context_t const *cont
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** uint32_t Cy_SCB_UART_GetNumReceived  (CySCB_Type const *base, cy_stc_scb_uart_context_t const *cont
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** cy_en_scb_uart_status_t Cy_SCB_UART_Transmit(CySCB_Type *base, void *buffer, uint32_t size,
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                              cy_stc_scb_uart_context_t *context);
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** void     Cy_SCB_UART_AbortTransmit       (CySCB_Type *base, cy_stc_scb_uart_context_t *context);
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** uint32_t Cy_SCB_UART_GetTransmitStatus   (CySCB_Type const *base, cy_stc_scb_uart_context_t const *
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** uint32_t Cy_SCB_UART_GetNumLeftToTransmit(CySCB_Type const *base, cy_stc_scb_uart_context_t const *
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \} group_scb_uart_high_level_functions */
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 14


 662:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_low_level_functions
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_Put             (CySCB_Type *base, uint32_t data);
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_PutArray        (CySCB_Type *base, void *buffer, uint32_t size
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_PutArrayBlocking(CySCB_Type *base, void *buffer, uint32_t size
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_PutString       (CySCB_Type *base, char_t const string[]);
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** void Cy_SCB_UART_SendBreakBlocking(CySCB_Type *base, uint32_t breakWidth);
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_Get             (CySCB_Type const *base);
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetArray        (CySCB_Type const *base, void *buffer, uint32_
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_GetArrayBlocking(CySCB_Type const *base, void *buffer, uint32_
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetTxFifoStatus  (CySCB_Type const *base);
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_ClearTxFifoStatus(CySCB_Type *base, uint32_t clearMask);
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetRxFifoStatus  (CySCB_Type const *base);
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_ClearRxFifoStatus(CySCB_Type *base, uint32_t clearMask);
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetNumInTxFifo   (CySCB_Type const *base);
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE bool     Cy_SCB_UART_IsTxComplete     (CySCB_Type const *base);
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetNumInRxFifo   (CySCB_Type const *base);
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_ClearRxFifo      (CySCB_Type *base);
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_ClearTxFifo      (CySCB_Type *base);
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \} group_scb_uart_low_level_functions */
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_interrupt_functions
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** void Cy_SCB_UART_Interrupt(CySCB_Type *base, cy_stc_scb_uart_context_t *context);
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_RegisterCallback(CySCB_Type const *base, cy_cb_scb_uart_handle_eve
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                   cy_stc_scb_uart_context_t *context);
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \} group_scb_uart_interrupt_functions */
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_low_power_functions
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** cy_en_syspm_status_t Cy_SCB_UART_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams);
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** cy_en_syspm_status_t Cy_SCB_UART_HibernateCallback(cy_stc_syspm_callback_params_t *callbackParams);
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \} group_scb_uart_low_power_functions */
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /***************************************
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *            API Constants
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ***************************************/
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_macros
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 15


 719:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \defgroup group_scb_uart_macros_irda_lp_ovs UART IRDA Low Power Oversample factors
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IRDA_LP_OVS16      (1UL)   /**< IrDA in low-power mode oversampled by 16   */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IRDA_LP_OVS32      (2UL)   /**< IrDA in low-power mode oversampled by 32   */
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IRDA_LP_OVS48      (3UL)   /**< IrDA in low-power mode oversampled by 48   */
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IRDA_LP_OVS96      (4UL)   /**< IrDA in low-power mode oversampled by 96   */
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IRDA_LP_OVS192     (5UL)   /**< IrDA in low-power mode oversampled by 192  */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IRDA_LP_OVS768     (6UL)   /**< IrDA in low-power mode oversampled by 768  */
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IRDA_LP_OVS1536    (7UL)   /**< IrDA in low-power mode oversampled by 1536 */
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \} group_scb_uart_macros_irda_lp_ovs */
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \defgroup group_scb_uart_macros_rx_fifo_status UART Receive FIFO status.
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** The number of entries in the RX FIFO is more than the RX FIFO trigger level
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * value
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_TRIGGER         (SCB_INTR_RX_TRIGGER_Msk)
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** The RX FIFO is not empty, there is data to read */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_NOT_EMPTY       (SCB_INTR_RX_NOT_EMPTY_Msk)
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The RX FIFO is full, there is no more space for additional data, and
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * any additional data will be dropped
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_FULL            (SCB_INTR_RX_FULL_Msk)
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The RX FIFO was full and there was an attempt to write to it.
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * That additional data was dropped.
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_OVERFLOW        (SCB_INTR_RX_OVERFLOW_Msk)
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** An attempt to read from an empty RX FIFO */
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_UNDERFLOW       (SCB_INTR_RX_UNDERFLOW_Msk)
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** The RX FIFO detected a frame error, either a stop or stop-bit error */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_ERR_FRAME       (SCB_INTR_RX_FRAME_ERROR_Msk)
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** The RX FIFO detected a parity error */
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_ERR_PARITY      (SCB_INTR_RX_PARITY_ERROR_Msk)
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** The RX FIFO detected a break transmission from the transmitter */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_BREAK_DETECT    (SCB_INTR_RX_BREAK_DETECT_Msk)
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \} group_scb_uart_macros_rx_fifo_status */
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \defgroup group_scb_uart_macros_tx_fifo_status UART TX FIFO Statuses
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** The number of entries in the TX FIFO is less than the TX FIFO trigger level
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * value
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_TRIGGER     (SCB_INTR_TX_TRIGGER_Msk)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 16


 776:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** The TX FIFO is not full, there is a space for more data */
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_NOT_FULL    (SCB_INTR_TX_NOT_FULL_Msk)
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** The TX FIFO is empty, note there may still be data in the shift register.*/
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_EMPTY       (SCB_INTR_TX_EMPTY_Msk)
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** An attempt to write to the full TX FIFO */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_OVERFLOW    (SCB_INTR_TX_OVERFLOW_Msk)
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** An attempt to read from an empty transmitter FIFO (hardware reads). */
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_UNDERFLOW (SCB_INTR_TX_UNDERFLOW_Msk)
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** All data has been transmitted out of the FIFO, including shifter */
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_DONE        (SCB_INTR_TX_UART_DONE_Msk)
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** SmartCard only: the transmitter received a NACK */
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_NACK        (SCB_INTR_TX_UART_NACK_Msk)
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** SmartCard only: the transmitter lost arbitration */
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_ARB_LOST    (SCB_INTR_TX_UART_ARB_LOST_Msk)
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \} group_scb_uart_macros_tx_fifo_status */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \defgroup group_scb_uart_macros_receive_status UART Receive Statuses
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** The receive operation started by \ref Cy_SCB_UART_Receive is in progress */
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_ACTIVE         (0x01UL)
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The hardware RX FIFO was full and there was an attempt to write to it.
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * That additional data was dropped.
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_OVERFLOW       (SCB_INTR_RX_OVERFLOW_Msk)
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** The receive hardware detected a frame error, either a start or
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * stop bit error
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_ERR_FRAME      (SCB_INTR_RX_FRAME_ERROR_Msk)
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** The receive hardware detected a parity error */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_ERR_PARITY     (SCB_INTR_RX_PARITY_ERROR_Msk)
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** The receive hardware detected a break transmission from transmitter */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_BREAK_DETECT   (SCB_INTR_RX_BREAK_DETECT_Msk)
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \} group_scb_uart_macros_receive_status */
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \defgroup group_scb_uart_macros_transmit_status UART Transmit Status
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** The transmit operation started by \ref Cy_SCB_UART_Transmit is in progress */
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_ACTIVE    (0x01UL)
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * All data elements specified by \ref Cy_SCB_UART_Transmit have been loaded
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 17


 833:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * into the TX FIFO
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_IN_FIFO   (0x02UL)
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** SmartCard only: the transmitter received a NACK */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_NACK      (SCB_INTR_TX_UART_NACK_Msk)
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** SmartCard only: the transmitter lost arbitration */
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_ARB_LOST  (SCB_INTR_TX_UART_ARB_LOST_Msk)
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \} group_scb_uart_macros_transmit_status */
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \defgroup group_scb_uart_macros_callback_events UART Callback Events
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Only single event is notified by the callback.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * All data elements specified by \ref Cy_SCB_UART_Transmit have been loaded
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * into the TX FIFO
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_IN_FIFO_EVENT (0x01UL)
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** The transmit operation started by \ref Cy_SCB_UART_Transmit is complete */
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_DONE_EVENT    (0x02UL)
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** The receive operation started by \ref Cy_SCB_UART_Receive is complete */
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_DONE_EVENT     (0x04UL)
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The ring buffer is full, there is no more space for additional data.
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Additional data is stored in the RX FIFO until it becomes full, at which
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * point data is dropped.
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RB_FULL_EVENT          (0x08UL)
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * An error was detected during the receive operation. This includes overflow,
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * frame error, or parity error. Check \ref Cy_SCB_UART_GetReceiveStatus to
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * determine the source of the error.
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_ERR_EVENT      (0x10UL)
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * An error was detected during the transmit operation. This includes a NACK
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * or lost arbitration. Check \ref Cy_SCB_UART_GetTransmitStatus to determine
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * the source of the error
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_ERR_EVENT     (0x20UL)
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \} group_scb_uart_macros_callback_events */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** Data returned by the hardware when an empty RX FIFO is read */
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_NO_DATA         (0xFFFFFFFFUL)
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /***************************************
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *         Internal Constants
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ***************************************/
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 18


 890:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \cond INTERNAL */
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_INTR_MASK    (CY_SCB_UART_TX_TRIGGER  | CY_SCB_UART_TX_NOT_FULL  | CY_SCB_UA
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                      CY_SCB_UART_TX_OVERFLOW | CY_SCB_UART_TX_UNDERFLOW | CY_SCB_UA
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                      CY_SCB_UART_TX_NACK     | CY_SCB_UART_TX_ARB_LOST)
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_INTR_MASK    (CY_SCB_UART_RX_TRIGGER    | CY_SCB_UART_RX_NOT_EMPTY | CY_SCB_
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                      CY_SCB_UART_RX_OVERFLOW   | CY_SCB_UART_RX_UNDERFLOW | CY_SCB_
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                      CY_SCB_UART_RX_ERR_PARITY | CY_SCB_UART_RX_BREAK_DETECT)
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_INTR        (CY_SCB_TX_INTR_LEVEL | CY_SCB_TX_INTR_UART_NACK | CY_SCB_TX_INT
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_INTR        (CY_SCB_RX_INTR_LEVEL | CY_SCB_RX_INTR_OVERFLOW | CY_SCB_RX_INTR
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                     CY_SCB_RX_INTR_UART_PARITY_ERROR | CY_SCB_RX_INTR_UART_BREAK_DE
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_ERR    (CY_SCB_RX_INTR_OVERFLOW | CY_SCB_RX_INTR_UART_FRAME_ERROR | \
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                     CY_SCB_RX_INTR_UART_PARITY_ERROR)
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_ERR   (CY_SCB_TX_INTR_UART_NACK | CY_SCB_TX_INTR_UART_ARB_LOST)
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_INIT_KEY       (0x00ABCDEFUL)
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_MODE_VALID(mode)     ( (CY_SCB_UART_STANDARD  == (mode)) || \
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                               (CY_SCB_UART_SMARTCARD == (mode)) || \
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                               (CY_SCB_UART_IRDA      == (mode)) )
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_STOP_BITS_VALID(stopBits)    ( (CY_SCB_UART_STOP_BITS_1   == (stopBits)) || 
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_STOP_BITS_1_5 == (stopBits)) || 
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_STOP_BITS_2   == (stopBits)) || 
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_STOP_BITS_2_5 == (stopBits)) || 
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_STOP_BITS_3   == (stopBits)) || 
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_STOP_BITS_3_5 == (stopBits)) || 
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_STOP_BITS_4   == (stopBits)) )
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_PARITY_VALID(parity)         ( (CY_SCB_UART_PARITY_NONE == (parity)) || \
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_PARITY_EVEN == (parity)) || \
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_PARITY_ODD  == (parity)) )
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_POLARITY_VALID(polarity)     ( (CY_SCB_UART_ACTIVE_LOW  == (polarity)) || \
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_ACTIVE_HIGH == (polarity)) )
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_IRDA_LP_OVS_VALID(ovs)       ( (CY_SCB_UART_IRDA_LP_OVS16   == (ovs)) || \
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_IRDA_LP_OVS32   == (ovs)) || \
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_IRDA_LP_OVS48   == (ovs)) || \
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_IRDA_LP_OVS96   == (ovs)) || \
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_IRDA_LP_OVS192  == (ovs)) || \
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_IRDA_LP_OVS768  == (ovs)) || \
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_IRDA_LP_OVS1536 == (ovs)) )
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_ADDRESS_VALID(addr)          ((addr) <= 0xFFUL)
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_ADDRESS_MASK_VALID(mask)     ((mask) <= 0xFFUL)
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_DATA_WIDTH_VALID(width)      ( ((width) >= 5UL) && ((width) <= 9UL) )
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_OVERSAMPLE_VALID(ovs, mode, lpRx)    ( ((CY_SCB_UART_STANDARD  == (mode)) ||
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                               (((ovs) >= 8UL) && ((ovs) <= 16UL)) :
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                               ((lpRx) ? CY_SCB_UART_IS_IRDA_LP_OVS_
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_RX_BREAK_WIDTH_VALID(base, width)    ( ((width) >= (_FLD2VAL(SCB_RX_CTRL_DAT
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 19


 947:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                               ((width) <= 16UL) )
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_TX_BREAK_WIDTH_VALID(width)          ( ((width) >= 4UL) && ((width) <= 16UL)
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_MUTLI_PROC_VALID(mp, mode, width, parity)    ( (mp) ? ((CY_SCB_UART_STANDARD
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****                                                                               (CY_SCB_UART_PARITY_N
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \endcond */
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \} group_scb_uart_macros */
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /***************************************
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *    In-line Function Implementation
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ***************************************/
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_general_functions
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /*******************************************************************************
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_Enable
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ****************************************************************************//**
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Enables the SCB block for the UART operation.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param base
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_Enable(CySCB_Type *base)
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     base->CTRL |= SCB_CTRL_ENABLED_Msk;
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** }
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /*******************************************************************************
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_EnableCts
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ****************************************************************************//**
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Enables the Clear to Send (CTS) input for the UART. The UART will not transmit
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * data while this signal is inactive.
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param base
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_EnableCts(CySCB_Type *base)
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     base->UART_FLOW_CTRL |= SCB_UART_FLOW_CTRL_CTS_ENABLED_Msk;
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** }
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /*******************************************************************************
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_DisableCts
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ****************************************************************************//**
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Disables the Clear to Send (CTS) input for the UART.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 20


1004:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * See \ref Cy_SCB_UART_EnableCts for the details.
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param base
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_DisableCts(CySCB_Type *base)
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     base->UART_FLOW_CTRL &= (uint32_t) ~SCB_UART_FLOW_CTRL_CTS_ENABLED_Msk;
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** }
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /*******************************************************************************
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_SetRtsFifoLevel
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ****************************************************************************//**
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Sets a level for the Ready To Send (RTS) signal activation.
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * When the number of data elements in the receive FIFO is below this level,
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * then the RTS output is active. Otherwise, the RTS signal is inactive.
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * To disable the RTS signal generation, set this level to zero.
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param base
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param level
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The level in the RX FIFO for RTS signal activation.
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_SetRtsFifoLevel(CySCB_Type *base, uint32_t level)
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_ASSERT_L2(CY_SCB_IS_TRIGGER_LEVEL_VALID(base, level));
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     base->UART_FLOW_CTRL = _CLR_SET_FLD32U(base->UART_FLOW_CTRL, SCB_UART_FLOW_CTRL_TRIGGER_LEVEL, 
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** }
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /*******************************************************************************
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_GetRtsFifoLevel
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ****************************************************************************//**
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Returns the level in the RX FIFO for the RTS signal activation.
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param base
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \return
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The level in the RX FIFO for RTS signal activation.
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetRtsFifoLevel(CySCB_Type const *base)
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     return _FLD2VAL(SCB_UART_FLOW_CTRL_TRIGGER_LEVEL, base->UART_FLOW_CTRL);
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** }
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /*******************************************************************************
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_EnableSkipStart
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 21


1061:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ****************************************************************************//**
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Enables the skip start-bit functionality.
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The UART hardware does not synchronize to a start but synchronizes to
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * the first rising edge. To create a rising edge, the first data bit must
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * be a 1. This feature is useful when the Start edge is used to wake the
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * device through a GPIO interrupt.
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param base
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \note
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The skip start-bit feature is applied whenever the UART is disabled due
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * to entrance into Deep Sleep or after calling \ref Cy_SCB_UART_Disable.
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_EnableSkipStart(CySCB_Type *base)
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     base->UART_RX_CTRL |= SCB_UART_RX_CTRL_SKIP_START_Msk;
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** }
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /*******************************************************************************
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_DisableSkipStart
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ****************************************************************************//**
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Disable the skip start-bit functionality.
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * See \ref Cy_SCB_UART_EnableSkipStart for the details.
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param base
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_DisableSkipStart(CySCB_Type *base)
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     base->UART_RX_CTRL &= (uint32_t) ~SCB_UART_RX_CTRL_SKIP_START_Msk;
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** }
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /** \} group_scb_uart_general_functions */
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /**
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_low_level_functions
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \{
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** */
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /*******************************************************************************
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_Get
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ****************************************************************************//**
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Reads a single data element from the UART RX FIFO.
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * This function does not check whether the RX FIFO has data before reading it.
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * If the RX FIFO is empty, the function returns \ref CY_SCB_UART_RX_NO_DATA.
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param base
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \return
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Data from the RX FIFO.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 22


1118:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The data element size is defined by the configured data width.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_Get(CySCB_Type const *base)
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     return Cy_SCB_ReadRxFifo(base);
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** }
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /*******************************************************************************
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_GetArray
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ****************************************************************************//**
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Reads an array of data out of the UART RX FIFO.
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * This function does not block. It returns how many data elements were read
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * from the RX FIFO.
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param base
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param buffer
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the location to place the data read from the RX FIFO.
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The item size is defined by the data type, which depends on the configured
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * data width.
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param size
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The number of data elements to read from the RX FIFO.
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \return
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The number of data elements read from the RX FIFO.
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetArray(CySCB_Type const *base, void *buffer, uint32_t size)
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_ASSERT_L1(CY_SCB_IS_BUFFER_VALID(buffer, size));
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     return Cy_SCB_ReadArray(base, buffer, size);
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** }
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /*******************************************************************************
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_GetArrayBlocking
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ****************************************************************************//**
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Reads an array of data out of the UART RX FIFO.
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * This function blocks until the number of data elements specified by the
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * size has been read from the RX FIFO.
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param base
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param buffer
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the location to place the data read from the RX FIFO.
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The item size is defined by the data type, which depends on the configured
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * data width.
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param size
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 23


1175:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The number of data elements to read from the RX FIFO.
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_GetArrayBlocking(CySCB_Type const *base, void *buffer, uint32_t si
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_ASSERT_L1(CY_SCB_IS_BUFFER_VALID(buffer, size));
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     Cy_SCB_ReadArrayBlocking(base, buffer, size);
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** }
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /*******************************************************************************
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_GetRxFifoStatus
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ****************************************************************************//**
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Returns the current status of the RX FIFO.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Clears the active statuses to let the SCB hardware update them.
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param base
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \return
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \ref group_scb_uart_macros_rx_fifo_status
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetRxFifoStatus(CySCB_Type const *base)
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     return (Cy_SCB_GetRxInterruptStatus(base) & CY_SCB_UART_RX_INTR_MASK);
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** }
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /*******************************************************************************
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_ClearRxFifoStatus
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ****************************************************************************//**
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Clears the selected statuses of the RX FIFO.
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param base
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param clearMask
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The mask whose statuses to clear.
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * See \ref group_scb_uart_macros_rx_fifo_status for the set of constants.
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \note
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * This status is also used for interrupt generation, so clearing it also
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   clears the interrupt sources.
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * * Level-sensitive statuses such as \ref CY_SCB_UART_RX_TRIGGER,
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   \ref CY_SCB_UART_RX_NOT_EMPTY and \ref CY_SCB_UART_RX_FULL are set high again after
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *   being cleared if the condition remains true.
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_ClearRxFifoStatus(CySCB_Type *base, uint32_t clearMask)
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(clearMask, CY_SCB_UART_RX_INTR_MASK));
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     Cy_SCB_ClearRxInterrupt(base, clearMask);
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 24


1232:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** }
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /*******************************************************************************
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_GetNumInRxFifo
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ****************************************************************************//**
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Returns the number of data elements in the UART RX FIFO.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param base
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \return
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The number of data elements in the RX FIFO.
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The size of date element defined by the configured data width.
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetNumInRxFifo(CySCB_Type const *base)
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     return Cy_SCB_GetNumInRxFifo(base);
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** }
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /*******************************************************************************
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_ClearRxFifo
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ****************************************************************************//**
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Clears all data out of the UART RX FIFO.
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param base
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \sideeffect
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Any data currently in the shifter is cleared and lost.
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_ClearRxFifo(CySCB_Type *base)
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     Cy_SCB_ClearRxFifo(base);
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** }
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** /*******************************************************************************
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_Put
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** ****************************************************************************//**
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Places a single data element in the UART TX FIFO.
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * This function does not block and returns how many data elements were placed
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * in the TX FIFO.
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param base
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \param data
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * Data to put in the TX FIFO.
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The item size is defined by the data type, which depends on the configured
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * data width.
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 25


1289:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * \return
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** * The number of data elements placed in the TX FIFO: 0 or 1.
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** *******************************************************************************/
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_Put(CySCB_Type *base, uint32_t data)
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h **** {
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_uart.h ****     return Cy_SCB_Write(base, data);
  44              		.loc 2 1295 0 discriminator 1
  45 0004 2146     		mov	r1, r4
  46 0006 0348     		ldr	r0, .L4
  47 0008 FFF7FEFF 		bl	Cy_SCB_Write
  48              	.LVL2:
  49              	.LBE17:
  50              	.LBE16:
  38:stdio_user.c  ****     /* Place the call to your function here. */
  39:stdio_user.c  ****     while(0U == Cy_SCB_UART_Put(IO_STDOUT_UART, ch))
  51              		.loc 1 39 0 discriminator 1
  52 000c 0028     		cmp	r0, #0
  53 000e F9D0     		beq	.L2
  40:stdio_user.c  ****     {
  41:stdio_user.c  ****         /* Wait until FIFO is full */
  42:stdio_user.c  ****     }
  43:stdio_user.c  **** }
  54              		.loc 1 43 0
  55 0010 10BD     		pop	{r4, pc}
  56              	.LVL3:
  57              	.L5:
  58 0012 00BF     		.align	2
  59              	.L4:
  60 0014 00006140 		.word	1080098816
  61              		.cfi_endproc
  62              	.LFE234:
  63              		.size	STDIO_PutChar, .-STDIO_PutChar
  64              		.section	.text.STDIO_GetChar,"ax",%progbits
  65              		.align	2
  66              		.global	STDIO_GetChar
  67              		.thumb
  68              		.thumb_func
  69              		.type	STDIO_GetChar, %function
  70              	STDIO_GetChar:
  71              	.LFB235:
  44:stdio_user.c  **** #endif /* IO_STDOUT_ENABLE && IO_STDOUT_UART */
  45:stdio_user.c  **** 
  46:stdio_user.c  **** #if defined (IO_STDIN_ENABLE) && defined (IO_STDIN_UART)
  47:stdio_user.c  **** /*******************************************************************************
  48:stdio_user.c  **** * Function Name: STDIO_GetChar
  49:stdio_user.c  **** ********************************************************************************
  50:stdio_user.c  **** *
  51:stdio_user.c  **** * This function retrieves STDIN from a user specified input source.
  52:stdio_user.c  **** * Note: this is a template function which may be overwritten by the USER in order
  53:stdio_user.c  **** * to change the target used in redirecting STDIN stream.
  54:stdio_user.c  **** *
  55:stdio_user.c  **** * \return
  56:stdio_user.c  **** * The received character.
  57:stdio_user.c  **** *
  58:stdio_user.c  **** *******************************************************************************/
  59:stdio_user.c  **** uint32_t STDIO_GetChar(void)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 26


  60:stdio_user.c  **** {
  72              		.loc 1 60 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              	.L7:
  78              	.LVL4:
  79              	.LBB18:
  80              	.LBB19:
  81              	.LBB20:
  82              		.file 3 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_common.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \file cy_scb_common.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \version 2.10
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Provides common API declarations of the SCB driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb Serial Communication Block (SCB)
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb_common Common
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb_ezi2c  EZI2C (SCB)
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb_i2c    I2C (SCB)
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb_spi    SPI (SCB)
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb_uart   UART (SCB)
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \} */
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \addtogroup group_scb_common
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \{
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Common API for the Serial Communication Block.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * This is the common API that provides an interface to the SCB hardware.
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * The I2C, SPI, and UART drivers use this common API.
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Most users will use individual drivers and do not need to use the common
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * API for the SCB. However, you can use the common SCB API to implement
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * a custom driver based on the SCB hardware.
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \section group_scb_common_configuration Configuration Considerations
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * This is not a driver and it does not require configuration.
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \section group_scb_common_more_information More Information
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Refer to the SCB chapter of the technical reference manual (TRM).
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \section group_scb_common_MISRA MISRA-C Compliance
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 27


  46:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * <table class="doxtable">
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *   <tr>
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <th>MISRA rule</th>
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <th>Rule Class (Required/Advisory)</th>
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <th>Rule Description</th>
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <th>Description of Deviation(s)</th>
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *   </tr>
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *   <tr>
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <td>11.4</td>
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <td>A</td>
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <td>A cast should not be performed between a pointer to object type and
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *         a different pointer to object type.</td>
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <td>The pointer to the buffer memory is void to allow handling of
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *         different data types: uint8_t (4-8 bits) or uint16_t (9-16 bits).
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *         The cast operation is safe because the configuration is verified
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *         before operation is performed.
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *         </td>
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *   </tr>
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * </table>
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \section group_scb_common_changelog Changelog
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * <table class="doxtable">
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <td>2.10</td>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <td>None.</td>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <td>SCB I2C driver updated.</td>
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *   </tr>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *   <tr>
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <td rowspan="2"> 2.0</td>
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <td>Added parameters validation for public API.
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <td></td>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *   </tr>
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *   <tr>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <td>Fixed functions which return interrupt status to return only defined
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *         set of interrupt statuses.</td>
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <td></td>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *   </tr>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *   <tr>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <td>1.0</td>
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <td>Initial version.</td>
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     <td></td>
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *   </tr>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * </table>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb_common_macros Macros
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb_common_functions Functions
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb_common_data_structures Data Structures
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #if !defined(CY_SCB_COMMON_H)
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_COMMON_H
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #include <stdint.h>
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #include <stddef.h>
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #include <stdbool.h>
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 28


 103:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #include "cy_device_headers.h"
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #include "syslib/cy_syslib.h"
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #include "syspm/cy_syspm.h"
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #ifndef CY_IP_MXSCB
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****     #error "The SCB driver is not supported on this device"
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #endif
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #if defined(__cplusplus)
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** extern "C" {
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #endif
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /***************************************
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *        Function Prototypes
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** ***************************************/
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \addtogroup group_scb_common_functions
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \{
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_ReadRxFifo    (CySCB_Type const *base);
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetRxFifoLevel(CySCB_Type *base, uint32_t level);
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetNumInRxFifo(CySCB_Type const *base);
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxSrValid  (CySCB_Type const *base);
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearRxFifo   (CySCB_Type *base);
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_WriteTxFifo   (CySCB_Type *base, uint32_t data);
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetTxFifoLevel(CySCB_Type *base, uint32_t level);
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetNumInTxFifo(CySCB_Type const *base);
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxSrValid  (CySCB_Type const *base);
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE bool     Cy_SCB_IsTxComplete  (CySCB_Type const *base);
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearTxFifo   (CySCB_Type *base);
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetByteMode(CySCB_Type *base, bool byteMode);
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetInterruptCause(CySCB_Type const *base);
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptStatus(CySCB_Type const *base);
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetRxInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptMask  (CySCB_Type const *base);
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptStatusMasked(CySCB_Type const *base);
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearRxInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetRxInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptStatus(CySCB_Type const *base);
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetTxInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptMask  (CySCB_Type const *base);
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptStatusMasked(CySCB_Type const *base);
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearTxInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetTxInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptStatus(CySCB_Type const *base);
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetMasterInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptMask  (CySCB_Type const *base);
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptStatusMasked(CySCB_Type const *base);
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearMasterInterrupt    (CySCB_Type *base, uint32_t interruptMask);
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 29


 160:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetMasterInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptStatus(CySCB_Type const *base);
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetSlaveInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptMask  (CySCB_Type const *base);
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptStatusMasked(CySCB_Type const *base);
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearSlaveInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetSlaveInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptStatus(CySCB_Type const *base);
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetI2CInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptMask  (CySCB_Type const *base);
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptStatusMasked(CySCB_Type const *base);
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearI2CInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptStatus(CySCB_Type const *base);
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetSpiInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptMask  (CySCB_Type const *base);
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptStatusMasked(CySCB_Type const *base);
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearSpiInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /***************************************
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *     Internal Function Prototypes
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** ***************************************/
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** \cond INTERNAL */
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** void     Cy_SCB_ReadArrayNoCheck  (CySCB_Type const *base, void *buffer, uint32_t size);
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** uint32_t Cy_SCB_ReadArray         (CySCB_Type const *base, void *buffer, uint32_t size);
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** void     Cy_SCB_ReadArrayBlocking (CySCB_Type const *base, void *buffer, uint32_t size);
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** uint32_t Cy_SCB_Write             (CySCB_Type *base, uint32_t data);
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** void     Cy_SCB_WriteArrayNoCheck (CySCB_Type *base, void *buffer, uint32_t size);
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** uint32_t Cy_SCB_WriteArray        (CySCB_Type *base, void *buffer, uint32_t size);
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** void     Cy_SCB_WriteArrayBlocking(CySCB_Type *base, void *buffer, uint32_t size);
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** void     Cy_SCB_WriteString       (CySCB_Type *base, char_t const string[]);
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** void     Cy_SCB_WriteDefaultArrayNoCheck(CySCB_Type *base, uint32_t txData, uint32_t size);
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** uint32_t Cy_SCB_WriteDefaultArray (CySCB_Type *base, uint32_t txData, uint32_t size);
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetFifoSize (CySCB_Type const *base);
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_FwBlockReset(CySCB_Type *base);
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE bool     Cy_SCB_IsRxDataWidthByte(CySCB_Type const *base);
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE bool     Cy_SCB_IsTxDataWidthByte(CySCB_Type const *base);
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxFifoLevel   (CySCB_Type const *base);
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** \endcond */
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** \} group_scb_common_functions */
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /***************************************
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *            API Constants
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** ***************************************/
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \addtogroup group_scb_common_macros
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \{
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** Driver major version */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 30


 217:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_DRV_VERSION_MAJOR    (2)
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** Driver minor version */
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_DRV_VERSION_MINOR    (10)
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** SCB driver identifier */
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_ID           CY_PDL_DRV_ID(0x2AU)
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** Position for SCB driver sub mode */
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SUB_MODE_Pos (13UL)
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** EZI2C mode identifier */
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_EZI2C_ID     (0x0UL << CY_SCB_SUB_MODE_Pos)
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** EZI2C mode identifier */
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_I2C_ID       (0x1UL << CY_SCB_SUB_MODE_Pos)
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** EZI2C mode identifier */
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SPI_ID       (0x2UL << CY_SCB_SUB_MODE_Pos)
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** EZI2C mode identifier */
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_UART_ID      (0x3UL << CY_SCB_SUB_MODE_Pos)
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_intr_cause SCB Interrupt Causes
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \{
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** Interrupt from Master interrupt sources */
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR SCB_INTR_CAUSE_M_Msk
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** Interrupt from Slave interrupt sources  */
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR  SCB_INTR_CAUSE_S_Msk
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** Interrupt from TX interrupt sources */
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_TX_INTR     SCB_INTR_CAUSE_TX_Msk
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** Interrupt from RX interrupt sources */
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_RX_INTR     SCB_INTR_CAUSE_RX_Msk
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** Interrupt from I2C externally clocked interrupt sources */
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_I2C_INTR    SCB_INTR_CAUSE_I2C_EC_Msk
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** Interrupt from SPI externally clocked interrupt sources */
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SPI_INTR    SCB_INTR_CAUSE_SPI_EC_Msk
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** \} group_scb_common_macros_intr_cause */
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_tx_intr TX Interrupt Statuses
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \{
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * The number of data elements in the TX FIFO is less than the value
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * of the TX FIFO level
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_LEVEL           SCB_INTR_TX_TRIGGER_Msk
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The TX FIFO is not full */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 31


 274:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_NOT_FULL        SCB_INTR_TX_NOT_FULL_Msk
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The TX FIFO is empty */
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_EMPTY           SCB_INTR_TX_EMPTY_Msk
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** An attempt to write to a full TX FIFO */
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_OVERFLOW        SCB_INTR_TX_OVERFLOW_Msk
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** An attempt to read from an empty TX FIFO */
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UNDERFLOW       SCB_INTR_TX_UNDERFLOW_Msk
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The UART transfer is complete: all data elements from the TX FIFO are sent
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UART_DONE       SCB_INTR_TX_UART_DONE_Msk
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** SmartCard only: UART received a NACK */
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UART_NACK       SCB_INTR_TX_UART_NACK_Msk
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * SmartCard only: the value on the TX line of the UART does not match the
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * value on the RX line
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UART_ARB_LOST   SCB_INTR_TX_UART_ARB_LOST_Msk
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** \} group_scb_common_macros_tx_intr */
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_rx_intr RX Interrupt Statuses
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \{
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * The number of data elements in the RX FIFO is greater than the value of the
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * RX FIFO level
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_LEVEL             SCB_INTR_RX_TRIGGER_Msk
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The RX FIFO is not empty */
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_NOT_EMPTY         SCB_INTR_RX_NOT_EMPTY_Msk
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The RX FIFO is full */
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_FULL              SCB_INTR_RX_FULL_Msk
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** An attempt to write to a full RX FIFO */
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_OVERFLOW          SCB_INTR_RX_OVERFLOW_Msk
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** An attempt to read from an empty RX FIFO */
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UNDERFLOW         SCB_INTR_RX_UNDERFLOW_Msk
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** A UART framing error detected */
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UART_FRAME_ERROR  SCB_INTR_RX_FRAME_ERROR_Msk
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** A UART parity error detected  */
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UART_PARITY_ERROR SCB_INTR_RX_PARITY_ERROR_Msk
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** A UART break detected */
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UART_BREAK_DETECT SCB_INTR_RX_BREAK_DETECT_Msk
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** \} group_scb_common_macros_rx_intr */
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 32


 331:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_slave_intr Slave Interrupt Statuses
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \{
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * I2C slave lost arbitration: the value driven on the SDA line is not the same
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * as the value observed on the SDA line
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_ARB_LOST      SCB_INTR_S_I2C_ARB_LOST_Msk
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The I2C slave received a NAK */
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_NACK          SCB_INTR_S_I2C_NACK_Msk
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The I2C slave received  an ACK */
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_ACK           SCB_INTR_S_I2C_ACK_Msk
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * A Stop or Repeated Start event for a write transfer intended for this slave
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * was detected.
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_WRITE_STOP    SCB_INTR_S_I2C_WRITE_STOP_Msk
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** A Stop or Repeated Start event intended for this slave was detected */
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_STOP          SCB_INTR_S_I2C_STOP_Msk
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The I2C slave received a Start condition */
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_START         SCB_INTR_S_I2C_START_Msk
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The I2C slave received the matching address */
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_ADDR_MATCH    SCB_INTR_S_I2C_ADDR_MATCH_Msk
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The I2C Slave received the general call address */
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_GENERAL_ADDR  SCB_INTR_S_I2C_GENERAL_Msk
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The I2C slave bus error (detection of unexpected Start or Stop condition) */
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_BUS_ERROR     SCB_INTR_S_I2C_BUS_ERROR_Msk
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * The SPI slave select line is deselected at an expected time during an
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * SPI transfer.
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_SPI_BUS_ERROR     SCB_INTR_S_SPI_BUS_ERROR_Msk
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** \} group_scb_common_macros_slave_intr */
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_master_intr Master Interrupt Statuses
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \{
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The I2C master lost arbitration */
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_ARB_LOST    SCB_INTR_M_I2C_ARB_LOST_Msk
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The I2C master received a NACK */
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_NACK        SCB_INTR_M_I2C_NACK_Msk
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The I2C master received an ACK */
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_ACK         SCB_INTR_M_I2C_ACK_Msk
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 33


 388:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The I2C master generated a Stop */
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_STOP        SCB_INTR_M_I2C_STOP_Msk
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** The I2C master bus error (detection of unexpected START or STOP condition)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_BUS_ERROR   SCB_INTR_M_I2C_BUS_ERROR_Msk
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * The SPI master transfer is complete: all data elements transferred from the
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * TX FIFO and TX shift register.
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_SPI_DONE        SCB_INTR_M_SPI_DONE_Msk
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** \} group_scb_common_macros_master_intr */
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_i2c_intr I2C Interrupt Statuses
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \{
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Wake up request: the I2C slave received the matching address.
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Note that this interrupt source triggers in active mode.
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_I2C_INTR_WAKEUP     SCB_INTR_I2C_EC_WAKE_UP_Msk
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** \} group_scb_common_macros_i2c_intr */
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_SpiIntrStatuses SPI Interrupt Statuses
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \{
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Wake up request: the SPI slave detects an active edge of the slave select
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * signal. Note that this interrupt source triggers in active mode.
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SPI_INTR_WAKEUP     SCB_INTR_SPI_EC_WAKE_UP_Msk
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** \} group_scb_common_macros_SpiIntrStatuses */
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /***************************************
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *         Internal Constants
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** ***************************************/
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** \cond INTERNAL */
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /* Default registers values */
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_CTRL_DEF_VAL         (_VAL2FLD(SCB_CTRL_OVS, 15UL) | \
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_CTRL_MODE, 3UL))
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_I2C_CTRL_DEF_VAL     (_VAL2FLD(SCB_I2C_CTRL_HIGH_PHASE_OVS, 8UL)        | \
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_HIGH_PHASE_OVS, 8UL)        | \
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_M_READY_DATA_ACK, 1UL)      | \
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_M_NOT_READY_DATA_NACK, 1UL) | \
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_GENERAL_IGNORE, 1UL)      | \
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_READY_ADDR_ACK, 1UL)      | \
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_READY_DATA_ACK, 1UL)      | \
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_NOT_READY_ADDR_NACK, 1UL) | \
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_NOT_READY_DATA_NACK, 1UL))
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 34


 445:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_I2C_CFG_DEF_VAL      (_VAL2FLD(SCB_I2C_CFG_SDA_IN_FILT_TRIM, 3UL)   | \
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_IN_FILT_SEL, 1UL)    | \
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SCL_IN_FILT_SEL, 1UL)    | \
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_OUT_FILT0_TRIM, 2UL) | \
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_OUT_FILT1_TRIM, 2UL) | \
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_OUT_FILT2_TRIM, 2UL))
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_DEF_VAL     _VAL2FLD(SCB_SPI_CTRL_MODE, 3UL)
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_UART_CTRL_DEF_VAL    _VAL2FLD(SCB_UART_CTRL_MODE, 3UL)
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_UART_RX_CTRL_DEF_VAL (_VAL2FLD(SCB_UART_RX_CTRL_STOP_BITS, 2UL) | \
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_UART_RX_CTRL_BREAK_WIDTH, 10UL))
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_UART_TX_CTRL_DEF_VAL _VAL2FLD(SCB_UART_TX_CTRL_STOP_BITS, 2UL)
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_RX_CTRL_DEF_VAL      (_VAL2FLD(SCB_RX_CTRL_DATA_WIDTH, 7UL) | \
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_RX_CTRL_MSB_FIRST,  1UL))
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_TX_CTRL_DEF_VAL      (_VAL2FLD(SCB_TX_CTRL_DATA_WIDTH, 7UL) | \
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_TX_CTRL_MSB_FIRST,  1UL))
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /* SCB CTRL modes */
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_CTRL_MODE_I2C   (0UL)
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_CTRL_MODE_SPI   (1UL)
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_CTRL_MODE_UART  (2UL)
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /* The position and mask to set the I2C mode */
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_I2C_CTRL_MODE_Pos    SCB_I2C_CTRL_SLAVE_MODE_Pos
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_I2C_CTRL_MODE_Msk    (SCB_I2C_CTRL_SLAVE_MODE_Msk | \
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                      SCB_I2C_CTRL_MASTER_MODE_Msk)
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /* Cypress ID #282226:
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * SCB_I2C_CFG_SDA_IN_FILT_TRIM[1]: SCB clock enable (1), clock disable (0).
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_I2C_CFG_CLK_ENABLE_Msk  (_VAL2FLD(SCB_I2C_CFG_SDA_IN_FILT_TRIM, 2UL))
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /* I2C has fixed data width */
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_I2C_DATA_WIDTH   (7UL)
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /* RX and TX control register values */
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_I2C_RX_CTRL      (_VAL2FLD(SCB_RX_CTRL_DATA_WIDTH, CY_SCB_I2C_DATA_WIDTH) | \
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                  SCB_RX_CTRL_MSB_FIRST_Msk)
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_I2C_TX_CTRL      (_VAL2FLD(SCB_TX_CTRL_DATA_WIDTH, CY_SCB_I2C_DATA_WIDTH) | \
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                  SCB_TX_CTRL_MSB_FIRST_Msk | SCB_TX_CTRL_OPEN_DRAIN_Msk)
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /* The position and mask to make an address byte */
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_I2C_ADDRESS_Pos  (1UL)
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_I2C_ADDRESS_Msk  (0xFEUL)
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /* SPI slave select polarity */
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_SSEL_POLARITY_Pos   SCB_SPI_CTRL_SSEL_POLARITY0_Pos
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_SSEL_POLARITY_Msk   (SCB_SPI_CTRL_SSEL_POLARITY0_Msk | \
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                              SCB_SPI_CTRL_SSEL_POLARITY1_Msk | \
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                              SCB_SPI_CTRL_SSEL_POLARITY2_Msk | \
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                              SCB_SPI_CTRL_SSEL_POLARITY3_Msk)
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /* SPI clock modes: CPHA and CPOL */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 35


 502:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_CLK_MODE_Pos    SCB_SPI_CTRL_CPHA_Pos
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_CLK_MODE_Msk    (SCB_SPI_CTRL_CPHA_Msk | SCB_SPI_CTRL_CPOL_Msk)
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /* UART parity and parity enable combination */
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_UART_RX_CTRL_SET_PARITY_Msk      (SCB_UART_RX_CTRL_PARITY_ENABLED_Msk | \
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                                  SCB_UART_RX_CTRL_PARITY_Msk)
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_UART_RX_CTRL_SET_PARITY_Pos      SCB_UART_RX_CTRL_PARITY_Pos
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_UART_TX_CTRL_SET_PARITY_Msk      (SCB_UART_TX_CTRL_PARITY_ENABLED_Msk | \
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                                  SCB_UART_TX_CTRL_PARITY_Msk)
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_UART_TX_CTRL_SET_PARITY_Pos      SCB_UART_TX_CTRL_PARITY_Pos
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /* Max number of bits for byte mode */
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_BYTE_WIDTH   (8UL)
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /* Single unit to wait */
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_WAIT_1_UNIT  (1U)
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /* Clear interrupt sources */
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_CLEAR_ALL_INTR_SRC   (0UL)
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /* Hardware FIFO size */
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_FIFO_SIZE(base)    (SCB_GET_EZ_DATA_NR(base) / 2UL)
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /* Provides a list of allowed sources */
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_MASK     (CY_SCB_TX_INTR_LEVEL     | CY_SCB_TX_INTR_NOT_FULL  | CY_SCB_TX_IN
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                  CY_SCB_TX_INTR_OVERFLOW  | CY_SCB_TX_INTR_UNDERFLOW | CY_SCB_TX_IN
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                  CY_SCB_TX_INTR_UART_NACK | CY_SCB_TX_INTR_UART_ARB_LOST)
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_MASK     (CY_SCB_RX_INTR_LEVEL             | CY_SCB_RX_INTR_NOT_EMPTY | CY_S
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                  CY_SCB_RX_INTR_OVERFLOW          | CY_SCB_RX_INTR_UNDERFLOW       
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                  CY_SCB_RX_INTR_UART_FRAME_ERROR  | CY_SCB_RX_INTR_UART_PARITY_ERRO
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                  CY_SCB_RX_INTR_UART_BREAK_DETECT)
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_MASK  (CY_SCB_SLAVE_INTR_I2C_ARB_LOST   | CY_SCB_SLAVE_INTR_I2C_NACK | CY
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                  CY_SCB_SLAVE_INTR_I2C_WRITE_STOP | CY_SCB_SLAVE_INTR_I2C_STOP | CY
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                  CY_SCB_SLAVE_INTR_I2C_ADDR_MATCH | CY_SCB_SLAVE_INTR_I2C_GENERAL_A
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                  CY_SCB_SLAVE_INTR_I2C_BUS_ERROR  | CY_SCB_SLAVE_INTR_SPI_BUS_ERROR
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_MASK (CY_SCB_MASTER_INTR_I2C_ARB_LOST  | CY_SCB_MASTER_INTR_I2C_NACK | \
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                  CY_SCB_MASTER_INTR_I2C_ACK       | CY_SCB_MASTER_INTR_I2C_STOP | \
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****                                  CY_SCB_MASTER_INTR_I2C_BUS_ERROR | CY_SCB_MASTER_INTR_SPI_DONE)
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_I2C_INTR_MASK    CY_SCB_I2C_INTR_WAKEUP
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_SPI_INTR_MASK    CY_SCB_SPI_INTR_WAKEUP
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_IS_INTR_VALID(intr, mask)            ( 0UL == ((intr) & ((uint32_t) ~(mask))) )
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_IS_TRIGGER_LEVEL_VALID(base, level)  ((level) < Cy_SCB_GetFifoSize(base))
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_IS_I2C_ADDR_VALID(addr)              ( (0U == ((addr) & 0x80U)) )
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_IS_BUFFER_VALID(buffer, size)        ( (NULL != (buffer)) && ((size) > 0UL) )
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** #define CY_SCB_IS_I2C_BUFFER_VALID(buffer, size)    ( (0UL == (size)) ? true : (NULL != (buffer)) )
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** \endcond */
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /** \} group_scb_common_macros */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 36


 559:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /***************************************
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Inline Function Implementation
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** ***************************************/
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /**
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \addtogroup group_scb_common_functions
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \{
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** */
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /*******************************************************************************
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Function Name: Cy_SCB_ReadRxFifo
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** ****************************************************************************//**
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Reads a data element directly out of the RX FIFO.
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * This function does not check whether the RX FIFO has data before reading it.
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \param base
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * The pointer to the SCB instance.
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \return
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Data from RX FIFO.
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *******************************************************************************/
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_ReadRxFifo(CySCB_Type const *base)
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** {
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****     return (base->RX_FIFO_RD);
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** }
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /*******************************************************************************
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetRxFifoLevel
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** ****************************************************************************//**
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Sets the RX FIFO level. When there are more data elements in the RX FIFO than
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * this level, the RX FIFO level interrupt is triggered.
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \param base
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * The pointer to the SCB instance.
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \param level
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * When there are more data elements in the FIFO than this level, the RX level
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * interrupt is triggered.
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *******************************************************************************/
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetRxFifoLevel(CySCB_Type *base, uint32_t level)
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** {
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_TRIGGER_LEVEL_VALID(base, level));
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****     base->RX_FIFO_CTRL = _CLR_SET_FLD32U(base->RX_FIFO_CTRL, SCB_RX_FIFO_CTRL_TRIGGER_LEVEL, level)
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** }
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** 
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** /*******************************************************************************
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetNumInRxFifo
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** ****************************************************************************//**
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 37


 616:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * Returns the number of data elements currently in the RX FIFO.
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \param base
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * The pointer to the SCB instance.
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * \return
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** * The number or data elements in RX FIFO.
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** *******************************************************************************/
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetNumInRxFifo(CySCB_Type const *base)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** {
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h ****     return _FLD2VAL(SCB_RX_FIFO_STATUS_USED, base->RX_FIFO_STATUS);
  83              		.loc 3 627 0 discriminator 1
  84 0000 054B     		ldr	r3, .L8
  85 0002 D3F80833 		ldr	r3, [r3, #776]
  86 0006 C3F30803 		ubfx	r3, r3, #0, #9
  87              	.LVL5:
  88              	.LBE20:
  89              	.LBE19:
  90              	.LBE18:
  61:stdio_user.c  ****     /* Place the call to your function here. */
  62:stdio_user.c  ****     while(0UL == Cy_SCB_UART_GetNumInRxFifo(IO_STDIN_UART))
  91              		.loc 1 62 0 discriminator 1
  92 000a 002B     		cmp	r3, #0
  93 000c F8D0     		beq	.L7
  94              	.LVL6:
  95              	.LBB21:
  96              	.LBB22:
  97              	.LBB23:
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/scb/cy_scb_common.h **** }
  98              		.loc 3 586 0
  99 000e 024B     		ldr	r3, .L8
 100 0010 D3F84003 		ldr	r0, [r3, #832]
 101              	.LVL7:
 102              	.LBE23:
 103              	.LBE22:
 104              	.LBE21:
  63:stdio_user.c  ****     {
  64:stdio_user.c  ****     }
  65:stdio_user.c  ****     return (Cy_SCB_UART_Get(IO_STDIN_UART));
  66:stdio_user.c  **** }
 105              		.loc 1 66 0
 106 0014 7047     		bx	lr
 107              	.L9:
 108 0016 00BF     		.align	2
 109              	.L8:
 110 0018 00006140 		.word	1080098816
 111              		.cfi_endproc
 112              	.LFE235:
 113              		.size	STDIO_GetChar, .-STDIO_GetChar
 114              		.text
 115              	.Letext0:
 116              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 117              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 118              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/ip/cyip_scb.h"
 119              		.file 7 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 120              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 38


 121              	.Ldebug_info0:
 122 0000 7F070000 		.4byte	0x77f
 123 0004 0400     		.2byte	0x4
 124 0006 00000000 		.4byte	.Ldebug_abbrev0
 125 000a 04       		.byte	0x4
 126 000b 01       		.uleb128 0x1
 127 000c BD010000 		.4byte	.LASF97
 128 0010 0C       		.byte	0xc
 129 0011 FF040000 		.4byte	.LASF98
 130 0015 AB030000 		.4byte	.LASF99
 131 0019 00000000 		.4byte	.Ldebug_ranges0+0
 132 001d 00000000 		.4byte	0
 133 0021 00000000 		.4byte	.Ldebug_line0
 134 0025 02       		.uleb128 0x2
 135 0026 02       		.byte	0x2
 136 0027 05       		.byte	0x5
 137 0028 73000000 		.4byte	.LASF0
 138 002c 02       		.uleb128 0x2
 139 002d 01       		.byte	0x1
 140 002e 06       		.byte	0x6
 141 002f 39010000 		.4byte	.LASF1
 142 0033 02       		.uleb128 0x2
 143 0034 01       		.byte	0x1
 144 0035 08       		.byte	0x8
 145 0036 D6020000 		.4byte	.LASF2
 146 003a 02       		.uleb128 0x2
 147 003b 02       		.byte	0x2
 148 003c 07       		.byte	0x7
 149 003d 16040000 		.4byte	.LASF3
 150 0041 03       		.uleb128 0x3
 151 0042 4F040000 		.4byte	.LASF5
 152 0046 04       		.byte	0x4
 153 0047 3F       		.byte	0x3f
 154 0048 4C000000 		.4byte	0x4c
 155 004c 02       		.uleb128 0x2
 156 004d 04       		.byte	0x4
 157 004e 05       		.byte	0x5
 158 004f A6010000 		.4byte	.LASF4
 159 0053 03       		.uleb128 0x3
 160 0054 B4000000 		.4byte	.LASF6
 161 0058 04       		.byte	0x4
 162 0059 41       		.byte	0x41
 163 005a 5E000000 		.4byte	0x5e
 164 005e 02       		.uleb128 0x2
 165 005f 04       		.byte	0x4
 166 0060 07       		.byte	0x7
 167 0061 B1040000 		.4byte	.LASF7
 168 0065 02       		.uleb128 0x2
 169 0066 08       		.byte	0x8
 170 0067 05       		.byte	0x5
 171 0068 7B010000 		.4byte	.LASF8
 172 006c 02       		.uleb128 0x2
 173 006d 08       		.byte	0x8
 174 006e 07       		.byte	0x7
 175 006f 47030000 		.4byte	.LASF9
 176 0073 04       		.uleb128 0x4
 177 0074 04       		.byte	0x4
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 39


 178 0075 05       		.byte	0x5
 179 0076 696E7400 		.ascii	"int\000"
 180 007a 02       		.uleb128 0x2
 181 007b 04       		.byte	0x4
 182 007c 07       		.byte	0x7
 183 007d 6F030000 		.4byte	.LASF10
 184 0081 03       		.uleb128 0x3
 185 0082 9F000000 		.4byte	.LASF11
 186 0086 05       		.byte	0x5
 187 0087 2C       		.byte	0x2c
 188 0088 41000000 		.4byte	0x41
 189 008c 03       		.uleb128 0x3
 190 008d 5E030000 		.4byte	.LASF12
 191 0091 05       		.byte	0x5
 192 0092 30       		.byte	0x30
 193 0093 53000000 		.4byte	0x53
 194 0097 02       		.uleb128 0x2
 195 0098 04       		.byte	0x4
 196 0099 07       		.byte	0x7
 197 009a 8B000000 		.4byte	.LASF13
 198 009e 05       		.uleb128 0x5
 199 009f 8C000000 		.4byte	0x8c
 200 00a3 06       		.uleb128 0x6
 201 00a4 9E000000 		.4byte	0x9e
 202 00a8 07       		.uleb128 0x7
 203 00a9 A3000000 		.4byte	0xa3
 204 00ad B8000000 		.4byte	0xb8
 205 00b1 08       		.uleb128 0x8
 206 00b2 97000000 		.4byte	0x97
 207 00b6 03       		.byte	0x3
 208 00b7 00       		.byte	0
 209 00b8 07       		.uleb128 0x7
 210 00b9 A3000000 		.4byte	0xa3
 211 00bd C8000000 		.4byte	0xc8
 212 00c1 08       		.uleb128 0x8
 213 00c2 97000000 		.4byte	0x97
 214 00c6 05       		.byte	0x5
 215 00c7 00       		.byte	0
 216 00c8 07       		.uleb128 0x7
 217 00c9 A3000000 		.4byte	0xa3
 218 00cd D8000000 		.4byte	0xd8
 219 00d1 08       		.uleb128 0x8
 220 00d2 97000000 		.4byte	0x97
 221 00d6 7F       		.byte	0x7f
 222 00d7 00       		.byte	0
 223 00d8 07       		.uleb128 0x7
 224 00d9 A3000000 		.4byte	0xa3
 225 00dd E8000000 		.4byte	0xe8
 226 00e1 08       		.uleb128 0x8
 227 00e2 97000000 		.4byte	0x97
 228 00e6 02       		.byte	0x2
 229 00e7 00       		.byte	0
 230 00e8 07       		.uleb128 0x7
 231 00e9 A3000000 		.4byte	0xa3
 232 00ed F8000000 		.4byte	0xf8
 233 00f1 08       		.uleb128 0x8
 234 00f2 97000000 		.4byte	0x97
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 40


 235 00f6 3E       		.byte	0x3e
 236 00f7 00       		.byte	0
 237 00f8 07       		.uleb128 0x7
 238 00f9 A3000000 		.4byte	0xa3
 239 00fd 08010000 		.4byte	0x108
 240 0101 08       		.uleb128 0x8
 241 0102 97000000 		.4byte	0x97
 242 0106 1E       		.byte	0x1e
 243 0107 00       		.byte	0
 244 0108 07       		.uleb128 0x7
 245 0109 A3000000 		.4byte	0xa3
 246 010d 18010000 		.4byte	0x118
 247 0111 08       		.uleb128 0x8
 248 0112 97000000 		.4byte	0x97
 249 0116 0B       		.byte	0xb
 250 0117 00       		.byte	0
 251 0118 07       		.uleb128 0x7
 252 0119 A3000000 		.4byte	0xa3
 253 011d 28010000 		.4byte	0x128
 254 0121 08       		.uleb128 0x8
 255 0122 97000000 		.4byte	0x97
 256 0126 0C       		.byte	0xc
 257 0127 00       		.byte	0
 258 0128 07       		.uleb128 0x7
 259 0129 A3000000 		.4byte	0xa3
 260 012d 38010000 		.4byte	0x138
 261 0131 08       		.uleb128 0x8
 262 0132 97000000 		.4byte	0x97
 263 0136 0A       		.byte	0xa
 264 0137 00       		.byte	0
 265 0138 07       		.uleb128 0x7
 266 0139 A3000000 		.4byte	0xa3
 267 013d 48010000 		.4byte	0x148
 268 0141 08       		.uleb128 0x8
 269 0142 97000000 		.4byte	0x97
 270 0146 2E       		.byte	0x2e
 271 0147 00       		.byte	0
 272 0148 07       		.uleb128 0x7
 273 0149 A3000000 		.4byte	0xa3
 274 014d 58010000 		.4byte	0x158
 275 0151 08       		.uleb128 0x8
 276 0152 97000000 		.4byte	0x97
 277 0156 2D       		.byte	0x2d
 278 0157 00       		.byte	0
 279 0158 09       		.uleb128 0x9
 280 0159 D00F     		.2byte	0xfd0
 281 015b 06       		.byte	0x6
 282 015c 21       		.byte	0x21
 283 015d DC040000 		.4byte	0x4dc
 284 0161 0A       		.uleb128 0xa
 285 0162 DB000000 		.4byte	.LASF14
 286 0166 06       		.byte	0x6
 287 0167 22       		.byte	0x22
 288 0168 9E000000 		.4byte	0x9e
 289 016c 00       		.byte	0
 290 016d 0A       		.uleb128 0xa
 291 016e 9F010000 		.4byte	.LASF15
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 41


 292 0172 06       		.byte	0x6
 293 0173 23       		.byte	0x23
 294 0174 A3000000 		.4byte	0xa3
 295 0178 04       		.byte	0x4
 296 0179 0A       		.uleb128 0xa
 297 017a 47000000 		.4byte	.LASF16
 298 017e 06       		.byte	0x6
 299 017f 24       		.byte	0x24
 300 0180 9E000000 		.4byte	0x9e
 301 0184 08       		.byte	0x8
 302 0185 0A       		.uleb128 0xa
 303 0186 2C050000 		.4byte	.LASF17
 304 018a 06       		.byte	0x6
 305 018b 25       		.byte	0x25
 306 018c A3000000 		.4byte	0xa3
 307 0190 0C       		.byte	0xc
 308 0191 0A       		.uleb128 0xa
 309 0192 3C050000 		.4byte	.LASF18
 310 0196 06       		.byte	0x6
 311 0197 26       		.byte	0x26
 312 0198 E1040000 		.4byte	0x4e1
 313 019c 10       		.byte	0x10
 314 019d 0A       		.uleb128 0xa
 315 019e 05010000 		.4byte	.LASF19
 316 01a2 06       		.byte	0x6
 317 01a3 27       		.byte	0x27
 318 01a4 9E000000 		.4byte	0x9e
 319 01a8 20       		.byte	0x20
 320 01a9 0A       		.uleb128 0xa
 321 01aa 94000000 		.4byte	.LASF20
 322 01ae 06       		.byte	0x6
 323 01af 28       		.byte	0x28
 324 01b0 A3000000 		.4byte	0xa3
 325 01b4 24       		.byte	0x24
 326 01b5 0A       		.uleb128 0xa
 327 01b6 7F040000 		.4byte	.LASF21
 328 01ba 06       		.byte	0x6
 329 01bb 29       		.byte	0x29
 330 01bc EB040000 		.4byte	0x4eb
 331 01c0 28       		.byte	0x28
 332 01c1 0A       		.uleb128 0xa
 333 01c2 91030000 		.4byte	.LASF22
 334 01c6 06       		.byte	0x6
 335 01c7 2A       		.byte	0x2a
 336 01c8 9E000000 		.4byte	0x9e
 337 01cc 40       		.byte	0x40
 338 01cd 0A       		.uleb128 0xa
 339 01ce A7000000 		.4byte	.LASF23
 340 01d2 06       		.byte	0x6
 341 01d3 2B       		.byte	0x2b
 342 01d4 9E000000 		.4byte	0x9e
 343 01d8 44       		.byte	0x44
 344 01d9 0A       		.uleb128 0xa
 345 01da 55000000 		.4byte	.LASF24
 346 01de 06       		.byte	0x6
 347 01df 2C       		.byte	0x2c
 348 01e0 9E000000 		.4byte	0x9e
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 42


 349 01e4 48       		.byte	0x48
 350 01e5 0A       		.uleb128 0xa
 351 01e6 CC000000 		.4byte	.LASF25
 352 01ea 06       		.byte	0x6
 353 01eb 2D       		.byte	0x2d
 354 01ec A3000000 		.4byte	0xa3
 355 01f0 4C       		.byte	0x4c
 356 01f1 0A       		.uleb128 0xa
 357 01f2 A6050000 		.4byte	.LASF26
 358 01f6 06       		.byte	0x6
 359 01f7 2E       		.byte	0x2e
 360 01f8 9E000000 		.4byte	0x9e
 361 01fc 50       		.byte	0x50
 362 01fd 0A       		.uleb128 0xa
 363 01fe 89040000 		.4byte	.LASF27
 364 0202 06       		.byte	0x6
 365 0203 2F       		.byte	0x2f
 366 0204 F5040000 		.4byte	0x4f5
 367 0208 54       		.byte	0x54
 368 0209 0A       		.uleb128 0xa
 369 020a 6A000000 		.4byte	.LASF28
 370 020e 06       		.byte	0x6
 371 020f 30       		.byte	0x30
 372 0210 9E000000 		.4byte	0x9e
 373 0214 60       		.byte	0x60
 374 0215 0A       		.uleb128 0xa
 375 0216 9B050000 		.4byte	.LASF29
 376 021a 06       		.byte	0x6
 377 021b 31       		.byte	0x31
 378 021c A3000000 		.4byte	0xa3
 379 0220 64       		.byte	0x64
 380 0221 0A       		.uleb128 0xa
 381 0222 F5040000 		.4byte	.LASF30
 382 0226 06       		.byte	0x6
 383 0227 32       		.byte	0x32
 384 0228 9E000000 		.4byte	0x9e
 385 022c 68       		.byte	0x68
 386 022d 0A       		.uleb128 0xa
 387 022e 45050000 		.4byte	.LASF31
 388 0232 06       		.byte	0x6
 389 0233 33       		.byte	0x33
 390 0234 9E000000 		.4byte	0x9e
 391 0238 6C       		.byte	0x6c
 392 0239 0A       		.uleb128 0xa
 393 023a 0E040000 		.4byte	.LASF32
 394 023e 06       		.byte	0x6
 395 023f 34       		.byte	0x34
 396 0240 9E000000 		.4byte	0x9e
 397 0244 70       		.byte	0x70
 398 0245 0A       		.uleb128 0xa
 399 0246 93040000 		.4byte	.LASF33
 400 024a 06       		.byte	0x6
 401 024b 35       		.byte	0x35
 402 024c 0F050000 		.4byte	0x50f
 403 0250 74       		.byte	0x74
 404 0251 0B       		.uleb128 0xb
 405 0252 B5050000 		.4byte	.LASF34
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 43


 406 0256 06       		.byte	0x6
 407 0257 36       		.byte	0x36
 408 0258 9E000000 		.4byte	0x9e
 409 025c 0001     		.2byte	0x100
 410 025e 0B       		.uleb128 0xb
 411 025f 9D040000 		.4byte	.LASF35
 412 0263 06       		.byte	0x6
 413 0264 37       		.byte	0x37
 414 0265 19050000 		.4byte	0x519
 415 0269 0401     		.2byte	0x104
 416 026b 0B       		.uleb128 0xb
 417 026c 35040000 		.4byte	.LASF36
 418 0270 06       		.byte	0x6
 419 0271 38       		.byte	0x38
 420 0272 9E000000 		.4byte	0x9e
 421 0276 0002     		.2byte	0x200
 422 0278 0B       		.uleb128 0xb
 423 0279 00000000 		.4byte	.LASF37
 424 027d 06       		.byte	0x6
 425 027e 39       		.byte	0x39
 426 027f 9E000000 		.4byte	0x9e
 427 0283 0402     		.2byte	0x204
 428 0285 0B       		.uleb128 0xb
 429 0286 70020000 		.4byte	.LASF38
 430 028a 06       		.byte	0x6
 431 028b 3A       		.byte	0x3a
 432 028c A3000000 		.4byte	0xa3
 433 0290 0802     		.2byte	0x208
 434 0292 0B       		.uleb128 0xb
 435 0293 A7040000 		.4byte	.LASF39
 436 0297 06       		.byte	0x6
 437 0298 3B       		.byte	0x3b
 438 0299 23050000 		.4byte	0x523
 439 029d 0C02     		.2byte	0x20c
 440 029f 0B       		.uleb128 0xb
 441 02a0 94010000 		.4byte	.LASF40
 442 02a4 06       		.byte	0x6
 443 02a5 3C       		.byte	0x3c
 444 02a6 9E000000 		.4byte	0x9e
 445 02aa 4002     		.2byte	0x240
 446 02ac 0B       		.uleb128 0xb
 447 02ad 0E010000 		.4byte	.LASF41
 448 02b1 06       		.byte	0x6
 449 02b2 3D       		.byte	0x3d
 450 02b3 2D050000 		.4byte	0x52d
 451 02b7 4402     		.2byte	0x244
 452 02b9 0B       		.uleb128 0xb
 453 02ba 7C030000 		.4byte	.LASF42
 454 02be 06       		.byte	0x6
 455 02bf 3E       		.byte	0x3e
 456 02c0 9E000000 		.4byte	0x9e
 457 02c4 0003     		.2byte	0x300
 458 02c6 0B       		.uleb128 0xb
 459 02c7 BF050000 		.4byte	.LASF43
 460 02cb 06       		.byte	0x6
 461 02cc 3F       		.byte	0x3f
 462 02cd 9E000000 		.4byte	0x9e
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 44


 463 02d1 0403     		.2byte	0x304
 464 02d3 0B       		.uleb128 0xb
 465 02d4 5F040000 		.4byte	.LASF44
 466 02d8 06       		.byte	0x6
 467 02d9 40       		.byte	0x40
 468 02da A3000000 		.4byte	0xa3
 469 02de 0803     		.2byte	0x308
 470 02e0 0B       		.uleb128 0xb
 471 02e1 25010000 		.4byte	.LASF45
 472 02e5 06       		.byte	0x6
 473 02e6 41       		.byte	0x41
 474 02e7 A3000000 		.4byte	0xa3
 475 02eb 0C03     		.2byte	0x30c
 476 02ed 0B       		.uleb128 0xb
 477 02ee EC040000 		.4byte	.LASF46
 478 02f2 06       		.byte	0x6
 479 02f3 42       		.byte	0x42
 480 02f4 9E000000 		.4byte	0x9e
 481 02f8 1003     		.2byte	0x310
 482 02fa 0B       		.uleb128 0xb
 483 02fb CF040000 		.4byte	.LASF47
 484 02ff 06       		.byte	0x6
 485 0300 43       		.byte	0x43
 486 0301 37050000 		.4byte	0x537
 487 0305 1403     		.2byte	0x314
 488 0307 0B       		.uleb128 0xb
 489 0308 44040000 		.4byte	.LASF48
 490 030c 06       		.byte	0x6
 491 030d 44       		.byte	0x44
 492 030e A3000000 		.4byte	0xa3
 493 0312 4003     		.2byte	0x340
 494 0314 0B       		.uleb128 0xb
 495 0315 0C050000 		.4byte	.LASF49
 496 0319 06       		.byte	0x6
 497 031a 45       		.byte	0x45
 498 031b A3000000 		.4byte	0xa3
 499 031f 4403     		.2byte	0x344
 500 0321 0B       		.uleb128 0xb
 501 0322 2F010000 		.4byte	.LASF50
 502 0326 06       		.byte	0x6
 503 0327 46       		.byte	0x46
 504 0328 41050000 		.4byte	0x541
 505 032c 4803     		.2byte	0x348
 506 032e 0B       		.uleb128 0xb
 507 032f EC000000 		.4byte	.LASF51
 508 0333 06       		.byte	0x6
 509 0334 47       		.byte	0x47
 510 0335 57050000 		.4byte	0x557
 511 0339 0004     		.2byte	0x400
 512 033b 0B       		.uleb128 0xb
 513 033c E4020000 		.4byte	.LASF52
 514 0340 06       		.byte	0x6
 515 0341 48       		.byte	0x48
 516 0342 61050000 		.4byte	0x561
 517 0346 000C     		.2byte	0xc00
 518 0348 0B       		.uleb128 0xb
 519 0349 62010000 		.4byte	.LASF53
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 45


 520 034d 06       		.byte	0x6
 521 034e 49       		.byte	0x49
 522 034f A3000000 		.4byte	0xa3
 523 0353 000E     		.2byte	0xe00
 524 0355 0B       		.uleb128 0xb
 525 0356 EF020000 		.4byte	.LASF54
 526 035a 06       		.byte	0x6
 527 035b 4A       		.byte	0x4a
 528 035c 6B050000 		.4byte	0x56b
 529 0360 040E     		.2byte	0xe04
 530 0362 0B       		.uleb128 0xb
 531 0363 C3040000 		.4byte	.LASF55
 532 0367 06       		.byte	0x6
 533 0368 4B       		.byte	0x4b
 534 0369 9E000000 		.4byte	0x9e
 535 036d 800E     		.2byte	0xe80
 536 036f 0B       		.uleb128 0xb
 537 0370 FA020000 		.4byte	.LASF56
 538 0374 06       		.byte	0x6
 539 0375 4C       		.byte	0x4c
 540 0376 A3000000 		.4byte	0xa3
 541 037a 840E     		.2byte	0xe84
 542 037c 0B       		.uleb128 0xb
 543 037d F4000000 		.4byte	.LASF57
 544 0381 06       		.byte	0x6
 545 0382 4D       		.byte	0x4d
 546 0383 9E000000 		.4byte	0x9e
 547 0387 880E     		.2byte	0xe88
 548 0389 0B       		.uleb128 0xb
 549 038a 88050000 		.4byte	.LASF58
 550 038e 06       		.byte	0x6
 551 038f 4E       		.byte	0x4e
 552 0390 A3000000 		.4byte	0xa3
 553 0394 8C0E     		.2byte	0xe8c
 554 0396 0B       		.uleb128 0xb
 555 0397 05030000 		.4byte	.LASF59
 556 039b 06       		.byte	0x6
 557 039c 4F       		.byte	0x4f
 558 039d 75050000 		.4byte	0x575
 559 03a1 900E     		.2byte	0xe90
 560 03a3 0B       		.uleb128 0xb
 561 03a4 E0040000 		.4byte	.LASF60
 562 03a8 06       		.byte	0x6
 563 03a9 50       		.byte	0x50
 564 03aa 9E000000 		.4byte	0x9e
 565 03ae C00E     		.2byte	0xec0
 566 03b0 0B       		.uleb128 0xb
 567 03b1 10030000 		.4byte	.LASF61
 568 03b5 06       		.byte	0x6
 569 03b6 51       		.byte	0x51
 570 03b7 A3000000 		.4byte	0xa3
 571 03bb C40E     		.2byte	0xec4
 572 03bd 0B       		.uleb128 0xb
 573 03be 23000000 		.4byte	.LASF62
 574 03c2 06       		.byte	0x6
 575 03c3 52       		.byte	0x52
 576 03c4 9E000000 		.4byte	0x9e
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 46


 577 03c8 C80E     		.2byte	0xec8
 578 03ca 0B       		.uleb128 0xb
 579 03cb 34000000 		.4byte	.LASF63
 580 03cf 06       		.byte	0x6
 581 03d0 53       		.byte	0x53
 582 03d1 A3000000 		.4byte	0xa3
 583 03d5 CC0E     		.2byte	0xecc
 584 03d7 0B       		.uleb128 0xb
 585 03d8 1B030000 		.4byte	.LASF64
 586 03dc 06       		.byte	0x6
 587 03dd 54       		.byte	0x54
 588 03de 7F050000 		.4byte	0x57f
 589 03e2 D00E     		.2byte	0xed0
 590 03e4 0B       		.uleb128 0xb
 591 03e5 29040000 		.4byte	.LASF65
 592 03e9 06       		.byte	0x6
 593 03ea 55       		.byte	0x55
 594 03eb 9E000000 		.4byte	0x9e
 595 03ef 000F     		.2byte	0xf00
 596 03f1 0B       		.uleb128 0xb
 597 03f2 89010000 		.4byte	.LASF66
 598 03f6 06       		.byte	0x6
 599 03f7 56       		.byte	0x56
 600 03f8 9E000000 		.4byte	0x9e
 601 03fc 040F     		.2byte	0xf04
 602 03fe 0B       		.uleb128 0xb
 603 03ff 77050000 		.4byte	.LASF67
 604 0403 06       		.byte	0x6
 605 0404 57       		.byte	0x57
 606 0405 9E000000 		.4byte	0x9e
 607 0409 080F     		.2byte	0xf08
 608 040b 0B       		.uleb128 0xb
 609 040c 6D010000 		.4byte	.LASF68
 610 0410 06       		.byte	0x6
 611 0411 58       		.byte	0x58
 612 0412 A3000000 		.4byte	0xa3
 613 0416 0C0F     		.2byte	0xf0c
 614 0418 0B       		.uleb128 0xb
 615 0419 26030000 		.4byte	.LASF69
 616 041d 06       		.byte	0x6
 617 041e 59       		.byte	0x59
 618 041f 89050000 		.4byte	0x589
 619 0423 100F     		.2byte	0xf10
 620 0425 0B       		.uleb128 0xb
 621 0426 3D040000 		.4byte	.LASF70
 622 042a 06       		.byte	0x6
 623 042b 5A       		.byte	0x5a
 624 042c 9E000000 		.4byte	0x9e
 625 0430 400F     		.2byte	0xf40
 626 0432 0B       		.uleb128 0xb
 627 0433 B0020000 		.4byte	.LASF71
 628 0437 06       		.byte	0x6
 629 0438 5B       		.byte	0x5b
 630 0439 9E000000 		.4byte	0x9e
 631 043d 440F     		.2byte	0xf44
 632 043f 0B       		.uleb128 0xb
 633 0440 45010000 		.4byte	.LASF72
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 47


 634 0444 06       		.byte	0x6
 635 0445 5C       		.byte	0x5c
 636 0446 9E000000 		.4byte	0x9e
 637 044a 480F     		.2byte	0xf48
 638 044c 0B       		.uleb128 0xb
 639 044d 1E050000 		.4byte	.LASF73
 640 0451 06       		.byte	0x6
 641 0452 5D       		.byte	0x5d
 642 0453 A3000000 		.4byte	0xa3
 643 0457 4C0F     		.2byte	0xf4c
 644 0459 0B       		.uleb128 0xb
 645 045a 31030000 		.4byte	.LASF74
 646 045e 06       		.byte	0x6
 647 045f 5E       		.byte	0x5e
 648 0460 93050000 		.4byte	0x593
 649 0464 500F     		.2byte	0xf50
 650 0466 0B       		.uleb128 0xb
 651 0467 62000000 		.4byte	.LASF75
 652 046b 06       		.byte	0x6
 653 046c 5F       		.byte	0x5f
 654 046d 9E000000 		.4byte	0x9e
 655 0471 800F     		.2byte	0xf80
 656 0473 0B       		.uleb128 0xb
 657 0474 E0000000 		.4byte	.LASF76
 658 0478 06       		.byte	0x6
 659 0479 60       		.byte	0x60
 660 047a 9E000000 		.4byte	0x9e
 661 047e 840F     		.2byte	0xf84
 662 0480 0B       		.uleb128 0xb
 663 0481 18010000 		.4byte	.LASF77
 664 0485 06       		.byte	0x6
 665 0486 61       		.byte	0x61
 666 0487 9E000000 		.4byte	0x9e
 667 048b 880F     		.2byte	0xf88
 668 048d 0B       		.uleb128 0xb
 669 048e C7020000 		.4byte	.LASF78
 670 0492 06       		.byte	0x6
 671 0493 62       		.byte	0x62
 672 0494 A3000000 		.4byte	0xa3
 673 0498 8C0F     		.2byte	0xf8c
 674 049a 0B       		.uleb128 0xb
 675 049b 3C030000 		.4byte	.LASF79
 676 049f 06       		.byte	0x6
 677 04a0 63       		.byte	0x63
 678 04a1 9D050000 		.4byte	0x59d
 679 04a5 900F     		.2byte	0xf90
 680 04a7 0B       		.uleb128 0xb
 681 04a8 67030000 		.4byte	.LASF80
 682 04ac 06       		.byte	0x6
 683 04ad 64       		.byte	0x64
 684 04ae 9E000000 		.4byte	0x9e
 685 04b2 C00F     		.2byte	0xfc0
 686 04b4 0B       		.uleb128 0xb
 687 04b5 73040000 		.4byte	.LASF81
 688 04b9 06       		.byte	0x6
 689 04ba 65       		.byte	0x65
 690 04bb 9E000000 		.4byte	0x9e
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 48


 691 04bf C40F     		.2byte	0xfc4
 692 04c1 0B       		.uleb128 0xb
 693 04c2 BF000000 		.4byte	.LASF82
 694 04c6 06       		.byte	0x6
 695 04c7 66       		.byte	0x66
 696 04c8 9E000000 		.4byte	0x9e
 697 04cc C80F     		.2byte	0xfc8
 698 04ce 0B       		.uleb128 0xb
 699 04cf 7F020000 		.4byte	.LASF83
 700 04d3 06       		.byte	0x6
 701 04d4 67       		.byte	0x67
 702 04d5 A3000000 		.4byte	0xa3
 703 04d9 CC0F     		.2byte	0xfcc
 704 04db 00       		.byte	0
 705 04dc 05       		.uleb128 0x5
 706 04dd A8000000 		.4byte	0xa8
 707 04e1 06       		.uleb128 0x6
 708 04e2 DC040000 		.4byte	0x4dc
 709 04e6 05       		.uleb128 0x5
 710 04e7 B8000000 		.4byte	0xb8
 711 04eb 06       		.uleb128 0x6
 712 04ec E6040000 		.4byte	0x4e6
 713 04f0 05       		.uleb128 0x5
 714 04f1 D8000000 		.4byte	0xd8
 715 04f5 06       		.uleb128 0x6
 716 04f6 F0040000 		.4byte	0x4f0
 717 04fa 07       		.uleb128 0x7
 718 04fb A3000000 		.4byte	0xa3
 719 04ff 0A050000 		.4byte	0x50a
 720 0503 08       		.uleb128 0x8
 721 0504 97000000 		.4byte	0x97
 722 0508 22       		.byte	0x22
 723 0509 00       		.byte	0
 724 050a 05       		.uleb128 0x5
 725 050b FA040000 		.4byte	0x4fa
 726 050f 06       		.uleb128 0x6
 727 0510 0A050000 		.4byte	0x50a
 728 0514 05       		.uleb128 0x5
 729 0515 E8000000 		.4byte	0xe8
 730 0519 06       		.uleb128 0x6
 731 051a 14050000 		.4byte	0x514
 732 051e 05       		.uleb128 0x5
 733 051f 18010000 		.4byte	0x118
 734 0523 06       		.uleb128 0x6
 735 0524 1E050000 		.4byte	0x51e
 736 0528 05       		.uleb128 0x5
 737 0529 38010000 		.4byte	0x138
 738 052d 06       		.uleb128 0x6
 739 052e 28050000 		.4byte	0x528
 740 0532 05       		.uleb128 0x5
 741 0533 28010000 		.4byte	0x128
 742 0537 06       		.uleb128 0x6
 743 0538 32050000 		.4byte	0x532
 744 053c 05       		.uleb128 0x5
 745 053d 48010000 		.4byte	0x148
 746 0541 06       		.uleb128 0x6
 747 0542 3C050000 		.4byte	0x53c
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 49


 748 0546 07       		.uleb128 0x7
 749 0547 9E000000 		.4byte	0x9e
 750 054b 57050000 		.4byte	0x557
 751 054f 0C       		.uleb128 0xc
 752 0550 97000000 		.4byte	0x97
 753 0554 FF01     		.2byte	0x1ff
 754 0556 00       		.byte	0
 755 0557 05       		.uleb128 0x5
 756 0558 46050000 		.4byte	0x546
 757 055c 05       		.uleb128 0x5
 758 055d C8000000 		.4byte	0xc8
 759 0561 06       		.uleb128 0x6
 760 0562 5C050000 		.4byte	0x55c
 761 0566 05       		.uleb128 0x5
 762 0567 F8000000 		.4byte	0xf8
 763 056b 06       		.uleb128 0x6
 764 056c 66050000 		.4byte	0x566
 765 0570 05       		.uleb128 0x5
 766 0571 08010000 		.4byte	0x108
 767 0575 06       		.uleb128 0x6
 768 0576 70050000 		.4byte	0x570
 769 057a 05       		.uleb128 0x5
 770 057b 08010000 		.4byte	0x108
 771 057f 06       		.uleb128 0x6
 772 0580 7A050000 		.4byte	0x57a
 773 0584 05       		.uleb128 0x5
 774 0585 08010000 		.4byte	0x108
 775 0589 06       		.uleb128 0x6
 776 058a 84050000 		.4byte	0x584
 777 058e 05       		.uleb128 0x5
 778 058f 08010000 		.4byte	0x108
 779 0593 06       		.uleb128 0x6
 780 0594 8E050000 		.4byte	0x58e
 781 0598 05       		.uleb128 0x5
 782 0599 08010000 		.4byte	0x108
 783 059d 06       		.uleb128 0x6
 784 059e 98050000 		.4byte	0x598
 785 05a2 03       		.uleb128 0x3
 786 05a3 51010000 		.4byte	.LASF84
 787 05a7 06       		.byte	0x6
 788 05a8 68       		.byte	0x68
 789 05a9 58010000 		.4byte	0x158
 790 05ad 02       		.uleb128 0x2
 791 05ae 08       		.byte	0x8
 792 05af 04       		.byte	0x4
 793 05b0 BB020000 		.4byte	.LASF85
 794 05b4 02       		.uleb128 0x2
 795 05b5 01       		.byte	0x1
 796 05b6 08       		.byte	0x8
 797 05b7 30040000 		.4byte	.LASF86
 798 05bb 02       		.uleb128 0x2
 799 05bc 04       		.byte	0x4
 800 05bd 04       		.byte	0x4
 801 05be 5C010000 		.4byte	.LASF87
 802 05c2 02       		.uleb128 0x2
 803 05c3 08       		.byte	0x8
 804 05c4 04       		.byte	0x4
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 50


 805 05c5 D9040000 		.4byte	.LASF88
 806 05c9 02       		.uleb128 0x2
 807 05ca 01       		.byte	0x1
 808 05cb 02       		.byte	0x2
 809 05cc 59040000 		.4byte	.LASF89
 810 05d0 0D       		.uleb128 0xd
 811 05d1 8E020000 		.4byte	.LASF90
 812 05d5 03       		.byte	0x3
 813 05d6 4802     		.2byte	0x248
 814 05d8 8C000000 		.4byte	0x8c
 815 05dc 03       		.byte	0x3
 816 05dd EE050000 		.4byte	0x5ee
 817 05e1 0E       		.uleb128 0xe
 818 05e2 83050000 		.4byte	.LASF92
 819 05e6 03       		.byte	0x3
 820 05e7 4802     		.2byte	0x248
 821 05e9 EE050000 		.4byte	0x5ee
 822 05ed 00       		.byte	0
 823 05ee 0F       		.uleb128 0xf
 824 05ef 04       		.byte	0x4
 825 05f0 F4050000 		.4byte	0x5f4
 826 05f4 06       		.uleb128 0x6
 827 05f5 A2050000 		.4byte	0x5a2
 828 05f9 0D       		.uleb128 0xd
 829 05fa 0D000000 		.4byte	.LASF91
 830 05fe 03       		.byte	0x3
 831 05ff 7102     		.2byte	0x271
 832 0601 8C000000 		.4byte	0x8c
 833 0605 03       		.byte	0x3
 834 0606 17060000 		.4byte	0x617
 835 060a 0E       		.uleb128 0xe
 836 060b 83050000 		.4byte	.LASF92
 837 060f 03       		.byte	0x3
 838 0610 7102     		.2byte	0x271
 839 0612 EE050000 		.4byte	0x5ee
 840 0616 00       		.byte	0
 841 0617 0D       		.uleb128 0xd
 842 0618 A0020000 		.4byte	.LASF93
 843 061c 02       		.byte	0x2
 844 061d 0D05     		.2byte	0x50d
 845 061f 8C000000 		.4byte	0x8c
 846 0623 03       		.byte	0x3
 847 0624 41060000 		.4byte	0x641
 848 0628 0E       		.uleb128 0xe
 849 0629 83050000 		.4byte	.LASF92
 850 062d 02       		.byte	0x2
 851 062e 0D05     		.2byte	0x50d
 852 0630 41060000 		.4byte	0x641
 853 0634 0E       		.uleb128 0xe
 854 0635 6E040000 		.4byte	.LASF94
 855 0639 02       		.byte	0x2
 856 063a 0D05     		.2byte	0x50d
 857 063c 8C000000 		.4byte	0x8c
 858 0640 00       		.byte	0
 859 0641 0F       		.uleb128 0xf
 860 0642 04       		.byte	0x4
 861 0643 A2050000 		.4byte	0x5a2
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 51


 862 0647 0D       		.uleb128 0xd
 863 0648 4F050000 		.4byte	.LASF95
 864 064c 02       		.byte	0x2
 865 064d E104     		.2byte	0x4e1
 866 064f 8C000000 		.4byte	0x8c
 867 0653 03       		.byte	0x3
 868 0654 65060000 		.4byte	0x665
 869 0658 0E       		.uleb128 0xe
 870 0659 83050000 		.4byte	.LASF92
 871 065d 02       		.byte	0x2
 872 065e E104     		.2byte	0x4e1
 873 0660 EE050000 		.4byte	0x5ee
 874 0664 00       		.byte	0
 875 0665 0D       		.uleb128 0xd
 876 0666 9B030000 		.4byte	.LASF96
 877 066a 02       		.byte	0x2
 878 066b 6104     		.2byte	0x461
 879 066d 8C000000 		.4byte	0x8c
 880 0671 03       		.byte	0x3
 881 0672 83060000 		.4byte	0x683
 882 0676 0E       		.uleb128 0xe
 883 0677 83050000 		.4byte	.LASF92
 884 067b 02       		.byte	0x2
 885 067c 6104     		.2byte	0x461
 886 067e EE050000 		.4byte	0x5ee
 887 0682 00       		.byte	0
 888 0683 10       		.uleb128 0x10
 889 0684 AF010000 		.4byte	.LASF100
 890 0688 01       		.byte	0x1
 891 0689 24       		.byte	0x24
 892 068a 00000000 		.4byte	.LFB234
 893 068e 18000000 		.4byte	.LFE234-.LFB234
 894 0692 01       		.uleb128 0x1
 895 0693 9C       		.byte	0x9c
 896 0694 E2060000 		.4byte	0x6e2
 897 0698 11       		.uleb128 0x11
 898 0699 636800   		.ascii	"ch\000"
 899 069c 01       		.byte	0x1
 900 069d 24       		.byte	0x24
 901 069e 8C000000 		.4byte	0x8c
 902 06a2 00000000 		.4byte	.LLST0
 903 06a6 12       		.uleb128 0x12
 904 06a7 17060000 		.4byte	0x617
 905 06ab 04000000 		.4byte	.LBB16
 906 06af 08000000 		.4byte	.LBE16-.LBB16
 907 06b3 01       		.byte	0x1
 908 06b4 27       		.byte	0x27
 909 06b5 13       		.uleb128 0x13
 910 06b6 34060000 		.4byte	0x634
 911 06ba 2C000000 		.4byte	.LLST1
 912 06be 13       		.uleb128 0x13
 913 06bf 28060000 		.4byte	0x628
 914 06c3 3F000000 		.4byte	.LLST2
 915 06c7 14       		.uleb128 0x14
 916 06c8 0C000000 		.4byte	.LVL2
 917 06cc 77070000 		.4byte	0x777
 918 06d0 15       		.uleb128 0x15
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 52


 919 06d1 01       		.uleb128 0x1
 920 06d2 50       		.byte	0x50
 921 06d3 05       		.uleb128 0x5
 922 06d4 0C       		.byte	0xc
 923 06d5 00006140 		.4byte	0x40610000
 924 06d9 15       		.uleb128 0x15
 925 06da 01       		.uleb128 0x1
 926 06db 51       		.byte	0x51
 927 06dc 02       		.uleb128 0x2
 928 06dd 74       		.byte	0x74
 929 06de 00       		.sleb128 0
 930 06df 00       		.byte	0
 931 06e0 00       		.byte	0
 932 06e1 00       		.byte	0
 933 06e2 16       		.uleb128 0x16
 934 06e3 7D000000 		.4byte	.LASF101
 935 06e7 01       		.byte	0x1
 936 06e8 3B       		.byte	0x3b
 937 06e9 8C000000 		.4byte	0x8c
 938 06ed 00000000 		.4byte	.LFB235
 939 06f1 1C000000 		.4byte	.LFE235-.LFB235
 940 06f5 01       		.uleb128 0x1
 941 06f6 9C       		.byte	0x9c
 942 06f7 66070000 		.4byte	0x766
 943 06fb 17       		.uleb128 0x17
 944 06fc 47060000 		.4byte	0x647
 945 0700 00000000 		.4byte	.LBB18
 946 0704 0A000000 		.4byte	.LBE18-.LBB18
 947 0708 01       		.byte	0x1
 948 0709 3E       		.byte	0x3e
 949 070a 32070000 		.4byte	0x732
 950 070e 13       		.uleb128 0x13
 951 070f 58060000 		.4byte	0x658
 952 0713 57000000 		.4byte	.LLST3
 953 0717 18       		.uleb128 0x18
 954 0718 F9050000 		.4byte	0x5f9
 955 071c 00000000 		.4byte	.LBB19
 956 0720 0A000000 		.4byte	.LBE19-.LBB19
 957 0724 02       		.byte	0x2
 958 0725 E304     		.2byte	0x4e3
 959 0727 13       		.uleb128 0x13
 960 0728 0A060000 		.4byte	0x60a
 961 072c 57000000 		.4byte	.LLST3
 962 0730 00       		.byte	0
 963 0731 00       		.byte	0
 964 0732 12       		.uleb128 0x12
 965 0733 65060000 		.4byte	0x665
 966 0737 0E000000 		.4byte	.LBB21
 967 073b 06000000 		.4byte	.LBE21-.LBB21
 968 073f 01       		.byte	0x1
 969 0740 41       		.byte	0x41
 970 0741 13       		.uleb128 0x13
 971 0742 76060000 		.4byte	0x676
 972 0746 6F000000 		.4byte	.LLST5
 973 074a 18       		.uleb128 0x18
 974 074b D0050000 		.4byte	0x5d0
 975 074f 0E000000 		.4byte	.LBB22
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 53


 976 0753 06000000 		.4byte	.LBE22-.LBB22
 977 0757 02       		.byte	0x2
 978 0758 6304     		.2byte	0x463
 979 075a 13       		.uleb128 0x13
 980 075b E1050000 		.4byte	0x5e1
 981 075f 6F000000 		.4byte	.LLST5
 982 0763 00       		.byte	0
 983 0764 00       		.byte	0
 984 0765 00       		.byte	0
 985 0766 19       		.uleb128 0x19
 986 0767 6A050000 		.4byte	.LASF102
 987 076b 07       		.byte	0x7
 988 076c EA07     		.2byte	0x7ea
 989 076e 72070000 		.4byte	0x772
 990 0772 05       		.uleb128 0x5
 991 0773 81000000 		.4byte	0x81
 992 0777 1A       		.uleb128 0x1a
 993 0778 84030000 		.4byte	.LASF103
 994 077c 84030000 		.4byte	.LASF103
 995 0780 03       		.byte	0x3
 996 0781 BE       		.byte	0xbe
 997 0782 00       		.byte	0
 998              		.section	.debug_abbrev,"",%progbits
 999              	.Ldebug_abbrev0:
 1000 0000 01       		.uleb128 0x1
 1001 0001 11       		.uleb128 0x11
 1002 0002 01       		.byte	0x1
 1003 0003 25       		.uleb128 0x25
 1004 0004 0E       		.uleb128 0xe
 1005 0005 13       		.uleb128 0x13
 1006 0006 0B       		.uleb128 0xb
 1007 0007 03       		.uleb128 0x3
 1008 0008 0E       		.uleb128 0xe
 1009 0009 1B       		.uleb128 0x1b
 1010 000a 0E       		.uleb128 0xe
 1011 000b 55       		.uleb128 0x55
 1012 000c 17       		.uleb128 0x17
 1013 000d 11       		.uleb128 0x11
 1014 000e 01       		.uleb128 0x1
 1015 000f 10       		.uleb128 0x10
 1016 0010 17       		.uleb128 0x17
 1017 0011 00       		.byte	0
 1018 0012 00       		.byte	0
 1019 0013 02       		.uleb128 0x2
 1020 0014 24       		.uleb128 0x24
 1021 0015 00       		.byte	0
 1022 0016 0B       		.uleb128 0xb
 1023 0017 0B       		.uleb128 0xb
 1024 0018 3E       		.uleb128 0x3e
 1025 0019 0B       		.uleb128 0xb
 1026 001a 03       		.uleb128 0x3
 1027 001b 0E       		.uleb128 0xe
 1028 001c 00       		.byte	0
 1029 001d 00       		.byte	0
 1030 001e 03       		.uleb128 0x3
 1031 001f 16       		.uleb128 0x16
 1032 0020 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 54


 1033 0021 03       		.uleb128 0x3
 1034 0022 0E       		.uleb128 0xe
 1035 0023 3A       		.uleb128 0x3a
 1036 0024 0B       		.uleb128 0xb
 1037 0025 3B       		.uleb128 0x3b
 1038 0026 0B       		.uleb128 0xb
 1039 0027 49       		.uleb128 0x49
 1040 0028 13       		.uleb128 0x13
 1041 0029 00       		.byte	0
 1042 002a 00       		.byte	0
 1043 002b 04       		.uleb128 0x4
 1044 002c 24       		.uleb128 0x24
 1045 002d 00       		.byte	0
 1046 002e 0B       		.uleb128 0xb
 1047 002f 0B       		.uleb128 0xb
 1048 0030 3E       		.uleb128 0x3e
 1049 0031 0B       		.uleb128 0xb
 1050 0032 03       		.uleb128 0x3
 1051 0033 08       		.uleb128 0x8
 1052 0034 00       		.byte	0
 1053 0035 00       		.byte	0
 1054 0036 05       		.uleb128 0x5
 1055 0037 35       		.uleb128 0x35
 1056 0038 00       		.byte	0
 1057 0039 49       		.uleb128 0x49
 1058 003a 13       		.uleb128 0x13
 1059 003b 00       		.byte	0
 1060 003c 00       		.byte	0
 1061 003d 06       		.uleb128 0x6
 1062 003e 26       		.uleb128 0x26
 1063 003f 00       		.byte	0
 1064 0040 49       		.uleb128 0x49
 1065 0041 13       		.uleb128 0x13
 1066 0042 00       		.byte	0
 1067 0043 00       		.byte	0
 1068 0044 07       		.uleb128 0x7
 1069 0045 01       		.uleb128 0x1
 1070 0046 01       		.byte	0x1
 1071 0047 49       		.uleb128 0x49
 1072 0048 13       		.uleb128 0x13
 1073 0049 01       		.uleb128 0x1
 1074 004a 13       		.uleb128 0x13
 1075 004b 00       		.byte	0
 1076 004c 00       		.byte	0
 1077 004d 08       		.uleb128 0x8
 1078 004e 21       		.uleb128 0x21
 1079 004f 00       		.byte	0
 1080 0050 49       		.uleb128 0x49
 1081 0051 13       		.uleb128 0x13
 1082 0052 2F       		.uleb128 0x2f
 1083 0053 0B       		.uleb128 0xb
 1084 0054 00       		.byte	0
 1085 0055 00       		.byte	0
 1086 0056 09       		.uleb128 0x9
 1087 0057 13       		.uleb128 0x13
 1088 0058 01       		.byte	0x1
 1089 0059 0B       		.uleb128 0xb
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 55


 1090 005a 05       		.uleb128 0x5
 1091 005b 3A       		.uleb128 0x3a
 1092 005c 0B       		.uleb128 0xb
 1093 005d 3B       		.uleb128 0x3b
 1094 005e 0B       		.uleb128 0xb
 1095 005f 01       		.uleb128 0x1
 1096 0060 13       		.uleb128 0x13
 1097 0061 00       		.byte	0
 1098 0062 00       		.byte	0
 1099 0063 0A       		.uleb128 0xa
 1100 0064 0D       		.uleb128 0xd
 1101 0065 00       		.byte	0
 1102 0066 03       		.uleb128 0x3
 1103 0067 0E       		.uleb128 0xe
 1104 0068 3A       		.uleb128 0x3a
 1105 0069 0B       		.uleb128 0xb
 1106 006a 3B       		.uleb128 0x3b
 1107 006b 0B       		.uleb128 0xb
 1108 006c 49       		.uleb128 0x49
 1109 006d 13       		.uleb128 0x13
 1110 006e 38       		.uleb128 0x38
 1111 006f 0B       		.uleb128 0xb
 1112 0070 00       		.byte	0
 1113 0071 00       		.byte	0
 1114 0072 0B       		.uleb128 0xb
 1115 0073 0D       		.uleb128 0xd
 1116 0074 00       		.byte	0
 1117 0075 03       		.uleb128 0x3
 1118 0076 0E       		.uleb128 0xe
 1119 0077 3A       		.uleb128 0x3a
 1120 0078 0B       		.uleb128 0xb
 1121 0079 3B       		.uleb128 0x3b
 1122 007a 0B       		.uleb128 0xb
 1123 007b 49       		.uleb128 0x49
 1124 007c 13       		.uleb128 0x13
 1125 007d 38       		.uleb128 0x38
 1126 007e 05       		.uleb128 0x5
 1127 007f 00       		.byte	0
 1128 0080 00       		.byte	0
 1129 0081 0C       		.uleb128 0xc
 1130 0082 21       		.uleb128 0x21
 1131 0083 00       		.byte	0
 1132 0084 49       		.uleb128 0x49
 1133 0085 13       		.uleb128 0x13
 1134 0086 2F       		.uleb128 0x2f
 1135 0087 05       		.uleb128 0x5
 1136 0088 00       		.byte	0
 1137 0089 00       		.byte	0
 1138 008a 0D       		.uleb128 0xd
 1139 008b 2E       		.uleb128 0x2e
 1140 008c 01       		.byte	0x1
 1141 008d 03       		.uleb128 0x3
 1142 008e 0E       		.uleb128 0xe
 1143 008f 3A       		.uleb128 0x3a
 1144 0090 0B       		.uleb128 0xb
 1145 0091 3B       		.uleb128 0x3b
 1146 0092 05       		.uleb128 0x5
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 56


 1147 0093 27       		.uleb128 0x27
 1148 0094 19       		.uleb128 0x19
 1149 0095 49       		.uleb128 0x49
 1150 0096 13       		.uleb128 0x13
 1151 0097 20       		.uleb128 0x20
 1152 0098 0B       		.uleb128 0xb
 1153 0099 01       		.uleb128 0x1
 1154 009a 13       		.uleb128 0x13
 1155 009b 00       		.byte	0
 1156 009c 00       		.byte	0
 1157 009d 0E       		.uleb128 0xe
 1158 009e 05       		.uleb128 0x5
 1159 009f 00       		.byte	0
 1160 00a0 03       		.uleb128 0x3
 1161 00a1 0E       		.uleb128 0xe
 1162 00a2 3A       		.uleb128 0x3a
 1163 00a3 0B       		.uleb128 0xb
 1164 00a4 3B       		.uleb128 0x3b
 1165 00a5 05       		.uleb128 0x5
 1166 00a6 49       		.uleb128 0x49
 1167 00a7 13       		.uleb128 0x13
 1168 00a8 00       		.byte	0
 1169 00a9 00       		.byte	0
 1170 00aa 0F       		.uleb128 0xf
 1171 00ab 0F       		.uleb128 0xf
 1172 00ac 00       		.byte	0
 1173 00ad 0B       		.uleb128 0xb
 1174 00ae 0B       		.uleb128 0xb
 1175 00af 49       		.uleb128 0x49
 1176 00b0 13       		.uleb128 0x13
 1177 00b1 00       		.byte	0
 1178 00b2 00       		.byte	0
 1179 00b3 10       		.uleb128 0x10
 1180 00b4 2E       		.uleb128 0x2e
 1181 00b5 01       		.byte	0x1
 1182 00b6 3F       		.uleb128 0x3f
 1183 00b7 19       		.uleb128 0x19
 1184 00b8 03       		.uleb128 0x3
 1185 00b9 0E       		.uleb128 0xe
 1186 00ba 3A       		.uleb128 0x3a
 1187 00bb 0B       		.uleb128 0xb
 1188 00bc 3B       		.uleb128 0x3b
 1189 00bd 0B       		.uleb128 0xb
 1190 00be 27       		.uleb128 0x27
 1191 00bf 19       		.uleb128 0x19
 1192 00c0 11       		.uleb128 0x11
 1193 00c1 01       		.uleb128 0x1
 1194 00c2 12       		.uleb128 0x12
 1195 00c3 06       		.uleb128 0x6
 1196 00c4 40       		.uleb128 0x40
 1197 00c5 18       		.uleb128 0x18
 1198 00c6 9742     		.uleb128 0x2117
 1199 00c8 19       		.uleb128 0x19
 1200 00c9 01       		.uleb128 0x1
 1201 00ca 13       		.uleb128 0x13
 1202 00cb 00       		.byte	0
 1203 00cc 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 57


 1204 00cd 11       		.uleb128 0x11
 1205 00ce 05       		.uleb128 0x5
 1206 00cf 00       		.byte	0
 1207 00d0 03       		.uleb128 0x3
 1208 00d1 08       		.uleb128 0x8
 1209 00d2 3A       		.uleb128 0x3a
 1210 00d3 0B       		.uleb128 0xb
 1211 00d4 3B       		.uleb128 0x3b
 1212 00d5 0B       		.uleb128 0xb
 1213 00d6 49       		.uleb128 0x49
 1214 00d7 13       		.uleb128 0x13
 1215 00d8 02       		.uleb128 0x2
 1216 00d9 17       		.uleb128 0x17
 1217 00da 00       		.byte	0
 1218 00db 00       		.byte	0
 1219 00dc 12       		.uleb128 0x12
 1220 00dd 1D       		.uleb128 0x1d
 1221 00de 01       		.byte	0x1
 1222 00df 31       		.uleb128 0x31
 1223 00e0 13       		.uleb128 0x13
 1224 00e1 11       		.uleb128 0x11
 1225 00e2 01       		.uleb128 0x1
 1226 00e3 12       		.uleb128 0x12
 1227 00e4 06       		.uleb128 0x6
 1228 00e5 58       		.uleb128 0x58
 1229 00e6 0B       		.uleb128 0xb
 1230 00e7 59       		.uleb128 0x59
 1231 00e8 0B       		.uleb128 0xb
 1232 00e9 00       		.byte	0
 1233 00ea 00       		.byte	0
 1234 00eb 13       		.uleb128 0x13
 1235 00ec 05       		.uleb128 0x5
 1236 00ed 00       		.byte	0
 1237 00ee 31       		.uleb128 0x31
 1238 00ef 13       		.uleb128 0x13
 1239 00f0 02       		.uleb128 0x2
 1240 00f1 17       		.uleb128 0x17
 1241 00f2 00       		.byte	0
 1242 00f3 00       		.byte	0
 1243 00f4 14       		.uleb128 0x14
 1244 00f5 898201   		.uleb128 0x4109
 1245 00f8 01       		.byte	0x1
 1246 00f9 11       		.uleb128 0x11
 1247 00fa 01       		.uleb128 0x1
 1248 00fb 31       		.uleb128 0x31
 1249 00fc 13       		.uleb128 0x13
 1250 00fd 00       		.byte	0
 1251 00fe 00       		.byte	0
 1252 00ff 15       		.uleb128 0x15
 1253 0100 8A8201   		.uleb128 0x410a
 1254 0103 00       		.byte	0
 1255 0104 02       		.uleb128 0x2
 1256 0105 18       		.uleb128 0x18
 1257 0106 9142     		.uleb128 0x2111
 1258 0108 18       		.uleb128 0x18
 1259 0109 00       		.byte	0
 1260 010a 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 58


 1261 010b 16       		.uleb128 0x16
 1262 010c 2E       		.uleb128 0x2e
 1263 010d 01       		.byte	0x1
 1264 010e 3F       		.uleb128 0x3f
 1265 010f 19       		.uleb128 0x19
 1266 0110 03       		.uleb128 0x3
 1267 0111 0E       		.uleb128 0xe
 1268 0112 3A       		.uleb128 0x3a
 1269 0113 0B       		.uleb128 0xb
 1270 0114 3B       		.uleb128 0x3b
 1271 0115 0B       		.uleb128 0xb
 1272 0116 27       		.uleb128 0x27
 1273 0117 19       		.uleb128 0x19
 1274 0118 49       		.uleb128 0x49
 1275 0119 13       		.uleb128 0x13
 1276 011a 11       		.uleb128 0x11
 1277 011b 01       		.uleb128 0x1
 1278 011c 12       		.uleb128 0x12
 1279 011d 06       		.uleb128 0x6
 1280 011e 40       		.uleb128 0x40
 1281 011f 18       		.uleb128 0x18
 1282 0120 9742     		.uleb128 0x2117
 1283 0122 19       		.uleb128 0x19
 1284 0123 01       		.uleb128 0x1
 1285 0124 13       		.uleb128 0x13
 1286 0125 00       		.byte	0
 1287 0126 00       		.byte	0
 1288 0127 17       		.uleb128 0x17
 1289 0128 1D       		.uleb128 0x1d
 1290 0129 01       		.byte	0x1
 1291 012a 31       		.uleb128 0x31
 1292 012b 13       		.uleb128 0x13
 1293 012c 11       		.uleb128 0x11
 1294 012d 01       		.uleb128 0x1
 1295 012e 12       		.uleb128 0x12
 1296 012f 06       		.uleb128 0x6
 1297 0130 58       		.uleb128 0x58
 1298 0131 0B       		.uleb128 0xb
 1299 0132 59       		.uleb128 0x59
 1300 0133 0B       		.uleb128 0xb
 1301 0134 01       		.uleb128 0x1
 1302 0135 13       		.uleb128 0x13
 1303 0136 00       		.byte	0
 1304 0137 00       		.byte	0
 1305 0138 18       		.uleb128 0x18
 1306 0139 1D       		.uleb128 0x1d
 1307 013a 01       		.byte	0x1
 1308 013b 31       		.uleb128 0x31
 1309 013c 13       		.uleb128 0x13
 1310 013d 11       		.uleb128 0x11
 1311 013e 01       		.uleb128 0x1
 1312 013f 12       		.uleb128 0x12
 1313 0140 06       		.uleb128 0x6
 1314 0141 58       		.uleb128 0x58
 1315 0142 0B       		.uleb128 0xb
 1316 0143 59       		.uleb128 0x59
 1317 0144 05       		.uleb128 0x5
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 59


 1318 0145 00       		.byte	0
 1319 0146 00       		.byte	0
 1320 0147 19       		.uleb128 0x19
 1321 0148 34       		.uleb128 0x34
 1322 0149 00       		.byte	0
 1323 014a 03       		.uleb128 0x3
 1324 014b 0E       		.uleb128 0xe
 1325 014c 3A       		.uleb128 0x3a
 1326 014d 0B       		.uleb128 0xb
 1327 014e 3B       		.uleb128 0x3b
 1328 014f 05       		.uleb128 0x5
 1329 0150 49       		.uleb128 0x49
 1330 0151 13       		.uleb128 0x13
 1331 0152 3F       		.uleb128 0x3f
 1332 0153 19       		.uleb128 0x19
 1333 0154 3C       		.uleb128 0x3c
 1334 0155 19       		.uleb128 0x19
 1335 0156 00       		.byte	0
 1336 0157 00       		.byte	0
 1337 0158 1A       		.uleb128 0x1a
 1338 0159 2E       		.uleb128 0x2e
 1339 015a 00       		.byte	0
 1340 015b 3F       		.uleb128 0x3f
 1341 015c 19       		.uleb128 0x19
 1342 015d 3C       		.uleb128 0x3c
 1343 015e 19       		.uleb128 0x19
 1344 015f 6E       		.uleb128 0x6e
 1345 0160 0E       		.uleb128 0xe
 1346 0161 03       		.uleb128 0x3
 1347 0162 0E       		.uleb128 0xe
 1348 0163 3A       		.uleb128 0x3a
 1349 0164 0B       		.uleb128 0xb
 1350 0165 3B       		.uleb128 0x3b
 1351 0166 0B       		.uleb128 0xb
 1352 0167 00       		.byte	0
 1353 0168 00       		.byte	0
 1354 0169 00       		.byte	0
 1355              		.section	.debug_loc,"",%progbits
 1356              	.Ldebug_loc0:
 1357              	.LLST0:
 1358 0000 00000000 		.4byte	.LVL0
 1359 0004 04000000 		.4byte	.LVL1
 1360 0008 0100     		.2byte	0x1
 1361 000a 50       		.byte	0x50
 1362 000b 04000000 		.4byte	.LVL1
 1363 000f 12000000 		.4byte	.LVL3
 1364 0013 0100     		.2byte	0x1
 1365 0015 54       		.byte	0x54
 1366 0016 12000000 		.4byte	.LVL3
 1367 001a 18000000 		.4byte	.LFE234
 1368 001e 0400     		.2byte	0x4
 1369 0020 F3       		.byte	0xf3
 1370 0021 01       		.uleb128 0x1
 1371 0022 50       		.byte	0x50
 1372 0023 9F       		.byte	0x9f
 1373 0024 00000000 		.4byte	0
 1374 0028 00000000 		.4byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 60


 1375              	.LLST1:
 1376 002c 04000000 		.4byte	.LVL1
 1377 0030 0C000000 		.4byte	.LVL2
 1378 0034 0100     		.2byte	0x1
 1379 0036 54       		.byte	0x54
 1380 0037 00000000 		.4byte	0
 1381 003b 00000000 		.4byte	0
 1382              	.LLST2:
 1383 003f 04000000 		.4byte	.LVL1
 1384 0043 0C000000 		.4byte	.LVL2
 1385 0047 0600     		.2byte	0x6
 1386 0049 0C       		.byte	0xc
 1387 004a 00006140 		.4byte	0x40610000
 1388 004e 9F       		.byte	0x9f
 1389 004f 00000000 		.4byte	0
 1390 0053 00000000 		.4byte	0
 1391              	.LLST3:
 1392 0057 00000000 		.4byte	.LVL4
 1393 005b 0A000000 		.4byte	.LVL5
 1394 005f 0600     		.2byte	0x6
 1395 0061 0C       		.byte	0xc
 1396 0062 00006140 		.4byte	0x40610000
 1397 0066 9F       		.byte	0x9f
 1398 0067 00000000 		.4byte	0
 1399 006b 00000000 		.4byte	0
 1400              	.LLST5:
 1401 006f 0E000000 		.4byte	.LVL6
 1402 0073 14000000 		.4byte	.LVL7
 1403 0077 0600     		.2byte	0x6
 1404 0079 0C       		.byte	0xc
 1405 007a 00006140 		.4byte	0x40610000
 1406 007e 9F       		.byte	0x9f
 1407 007f 00000000 		.4byte	0
 1408 0083 00000000 		.4byte	0
 1409              		.section	.debug_aranges,"",%progbits
 1410 0000 24000000 		.4byte	0x24
 1411 0004 0200     		.2byte	0x2
 1412 0006 00000000 		.4byte	.Ldebug_info0
 1413 000a 04       		.byte	0x4
 1414 000b 00       		.byte	0
 1415 000c 0000     		.2byte	0
 1416 000e 0000     		.2byte	0
 1417 0010 00000000 		.4byte	.LFB234
 1418 0014 18000000 		.4byte	.LFE234-.LFB234
 1419 0018 00000000 		.4byte	.LFB235
 1420 001c 1C000000 		.4byte	.LFE235-.LFB235
 1421 0020 00000000 		.4byte	0
 1422 0024 00000000 		.4byte	0
 1423              		.section	.debug_ranges,"",%progbits
 1424              	.Ldebug_ranges0:
 1425 0000 00000000 		.4byte	.LFB234
 1426 0004 18000000 		.4byte	.LFE234
 1427 0008 00000000 		.4byte	.LFB235
 1428 000c 1C000000 		.4byte	.LFE235
 1429 0010 00000000 		.4byte	0
 1430 0014 00000000 		.4byte	0
 1431              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 61


 1432              	.Ldebug_line0:
 1433 0000 40020000 		.section	.debug_str,"MS",%progbits,1
 1433      0200E701 
 1433      00000201 
 1433      FB0E0D00 
 1433      01010101 
 1434              	.LASF37:
 1435 0000 54585F46 		.ascii	"TX_FIFO_CTRL\000"
 1435      49464F5F 
 1435      4354524C 
 1435      00
 1436              	.LASF91:
 1437 000d 43795F53 		.ascii	"Cy_SCB_GetNumInRxFifo\000"
 1437      43425F47 
 1437      65744E75 
 1437      6D496E52 
 1437      78466966 
 1438              	.LASF62:
 1439 0023 494E5452 		.ascii	"INTR_SPI_EC_MASK\000"
 1439      5F535049 
 1439      5F45435F 
 1439      4D41534B 
 1439      00
 1440              	.LASF63:
 1441 0034 494E5452 		.ascii	"INTR_SPI_EC_MASKED\000"
 1441      5F535049 
 1441      5F45435F 
 1441      4D41534B 
 1441      454400
 1442              	.LASF16:
 1443 0047 434D445F 		.ascii	"CMD_RESP_CTRL\000"
 1443      52455350 
 1443      5F435452 
 1443      4C00
 1444              	.LASF24:
 1445 0055 55415254 		.ascii	"UART_RX_CTRL\000"
 1445      5F52585F 
 1445      4354524C 
 1445      00
 1446              	.LASF75:
 1447 0062 494E5452 		.ascii	"INTR_TX\000"
 1447      5F545800 
 1448              	.LASF28:
 1449 006a 4932435F 		.ascii	"I2C_CTRL\000"
 1449      4354524C 
 1449      00
 1450              	.LASF0:
 1451 0073 73686F72 		.ascii	"short int\000"
 1451      7420696E 
 1451      7400
 1452              	.LASF101:
 1453 007d 53544449 		.ascii	"STDIO_GetChar\000"
 1453      4F5F4765 
 1453      74436861 
 1453      7200
 1454              	.LASF13:
 1455 008b 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 62


 1455      74797065 
 1455      00
 1456              	.LASF20:
 1457 0094 5350495F 		.ascii	"SPI_STATUS\000"
 1457      53544154 
 1457      555300
 1458              	.LASF11:
 1459 009f 696E7433 		.ascii	"int32_t\000"
 1459      325F7400 
 1460              	.LASF23:
 1461 00a7 55415254 		.ascii	"UART_TX_CTRL\000"
 1461      5F54585F 
 1461      4354524C 
 1461      00
 1462              	.LASF6:
 1463 00b4 5F5F7569 		.ascii	"__uint32_t\000"
 1463      6E743332 
 1463      5F7400
 1464              	.LASF82:
 1465 00bf 494E5452 		.ascii	"INTR_RX_MASK\000"
 1465      5F52585F 
 1465      4D41534B 
 1465      00
 1466              	.LASF25:
 1467 00cc 55415254 		.ascii	"UART_RX_STATUS\000"
 1467      5F52585F 
 1467      53544154 
 1467      555300
 1468              	.LASF14:
 1469 00db 4354524C 		.ascii	"CTRL\000"
 1469      00
 1470              	.LASF76:
 1471 00e0 494E5452 		.ascii	"INTR_TX_SET\000"
 1471      5F54585F 
 1471      53455400 
 1472              	.LASF51:
 1473 00ec 455A5F44 		.ascii	"EZ_DATA\000"
 1473      41544100 
 1474              	.LASF57:
 1475 00f4 494E5452 		.ascii	"INTR_I2C_EC_MASK\000"
 1475      5F493243 
 1475      5F45435F 
 1475      4D41534B 
 1475      00
 1476              	.LASF19:
 1477 0105 5350495F 		.ascii	"SPI_CTRL\000"
 1477      4354524C 
 1477      00
 1478              	.LASF41:
 1479 010e 52455345 		.ascii	"RESERVED6\000"
 1479      52564544 
 1479      3600
 1480              	.LASF77:
 1481 0118 494E5452 		.ascii	"INTR_TX_MASK\000"
 1481      5F54585F 
 1481      4D41534B 
 1481      00
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 63


 1482              	.LASF45:
 1483 0125 52455345 		.ascii	"RESERVED7\000"
 1483      52564544 
 1483      3700
 1484              	.LASF50:
 1485 012f 52455345 		.ascii	"RESERVED9\000"
 1485      52564544 
 1485      3900
 1486              	.LASF1:
 1487 0139 7369676E 		.ascii	"signed char\000"
 1487      65642063 
 1487      68617200 
 1488              	.LASF72:
 1489 0145 494E5452 		.ascii	"INTR_S_MASK\000"
 1489      5F535F4D 
 1489      41534B00 
 1490              	.LASF84:
 1491 0151 43795343 		.ascii	"CySCB_Type\000"
 1491      425F5479 
 1491      706500
 1492              	.LASF87:
 1493 015c 666C6F61 		.ascii	"float\000"
 1493      7400
 1494              	.LASF53:
 1495 0162 494E5452 		.ascii	"INTR_CAUSE\000"
 1495      5F434155 
 1495      534500
 1496              	.LASF68:
 1497 016d 494E5452 		.ascii	"INTR_M_MASKED\000"
 1497      5F4D5F4D 
 1497      41534B45 
 1497      4400
 1498              	.LASF8:
 1499 017b 6C6F6E67 		.ascii	"long long int\000"
 1499      206C6F6E 
 1499      6720696E 
 1499      7400
 1500              	.LASF66:
 1501 0189 494E5452 		.ascii	"INTR_M_SET\000"
 1501      5F4D5F53 
 1501      455400
 1502              	.LASF40:
 1503 0194 54585F46 		.ascii	"TX_FIFO_WR\000"
 1503      49464F5F 
 1503      575200
 1504              	.LASF15:
 1505 019f 53544154 		.ascii	"STATUS\000"
 1505      555300
 1506              	.LASF4:
 1507 01a6 6C6F6E67 		.ascii	"long int\000"
 1507      20696E74 
 1507      00
 1508              	.LASF100:
 1509 01af 53544449 		.ascii	"STDIO_PutChar\000"
 1509      4F5F5075 
 1509      74436861 
 1509      7200
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 64


 1510              	.LASF97:
 1511 01bd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1511      43313120 
 1511      352E342E 
 1511      31203230 
 1511      31363036 
 1512 01f0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 1512      20726576 
 1512      6973696F 
 1512      6E203233 
 1512      37373135 
 1513 0223 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 1513      70202D6D 
 1513      6670753D 
 1513      66707634 
 1513      2D73702D 
 1514 0256 65637469 		.ascii	"ections -ffat-lto-objects\000"
 1514      6F6E7320 
 1514      2D666661 
 1514      742D6C74 
 1514      6F2D6F62 
 1515              	.LASF38:
 1516 0270 54585F46 		.ascii	"TX_FIFO_STATUS\000"
 1516      49464F5F 
 1516      53544154 
 1516      555300
 1517              	.LASF83:
 1518 027f 494E5452 		.ascii	"INTR_RX_MASKED\000"
 1518      5F52585F 
 1518      4D41534B 
 1518      454400
 1519              	.LASF90:
 1520 028e 43795F53 		.ascii	"Cy_SCB_ReadRxFifo\000"
 1520      43425F52 
 1520      65616452 
 1520      78466966 
 1520      6F00
 1521              	.LASF93:
 1522 02a0 43795F53 		.ascii	"Cy_SCB_UART_Put\000"
 1522      43425F55 
 1522      4152545F 
 1522      50757400 
 1523              	.LASF71:
 1524 02b0 494E5452 		.ascii	"INTR_S_SET\000"
 1524      5F535F53 
 1524      455400
 1525              	.LASF85:
 1526 02bb 6C6F6E67 		.ascii	"long double\000"
 1526      20646F75 
 1526      626C6500 
 1527              	.LASF78:
 1528 02c7 494E5452 		.ascii	"INTR_TX_MASKED\000"
 1528      5F54585F 
 1528      4D41534B 
 1528      454400
 1529              	.LASF2:
 1530 02d6 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 65


 1530      676E6564 
 1530      20636861 
 1530      7200
 1531              	.LASF52:
 1532 02e4 52455345 		.ascii	"RESERVED10\000"
 1532      52564544 
 1532      313000
 1533              	.LASF54:
 1534 02ef 52455345 		.ascii	"RESERVED11\000"
 1534      52564544 
 1534      313100
 1535              	.LASF56:
 1536 02fa 52455345 		.ascii	"RESERVED12\000"
 1536      52564544 
 1536      313200
 1537              	.LASF59:
 1538 0305 52455345 		.ascii	"RESERVED13\000"
 1538      52564544 
 1538      313300
 1539              	.LASF61:
 1540 0310 52455345 		.ascii	"RESERVED14\000"
 1540      52564544 
 1540      313400
 1541              	.LASF64:
 1542 031b 52455345 		.ascii	"RESERVED15\000"
 1542      52564544 
 1542      313500
 1543              	.LASF69:
 1544 0326 52455345 		.ascii	"RESERVED16\000"
 1544      52564544 
 1544      313600
 1545              	.LASF74:
 1546 0331 52455345 		.ascii	"RESERVED17\000"
 1546      52564544 
 1546      313700
 1547              	.LASF79:
 1548 033c 52455345 		.ascii	"RESERVED18\000"
 1548      52564544 
 1548      313800
 1549              	.LASF9:
 1550 0347 6C6F6E67 		.ascii	"long long unsigned int\000"
 1550      206C6F6E 
 1550      6720756E 
 1550      7369676E 
 1550      65642069 
 1551              	.LASF12:
 1552 035e 75696E74 		.ascii	"uint32_t\000"
 1552      33325F74 
 1552      00
 1553              	.LASF80:
 1554 0367 494E5452 		.ascii	"INTR_RX\000"
 1554      5F525800 
 1555              	.LASF10:
 1556 036f 756E7369 		.ascii	"unsigned int\000"
 1556      676E6564 
 1556      20696E74 
 1556      00
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 66


 1557              	.LASF42:
 1558 037c 52585F43 		.ascii	"RX_CTRL\000"
 1558      54524C00 
 1559              	.LASF103:
 1560 0384 43795F53 		.ascii	"Cy_SCB_Write\000"
 1560      43425F57 
 1560      72697465 
 1560      00
 1561              	.LASF22:
 1562 0391 55415254 		.ascii	"UART_CTRL\000"
 1562      5F435452 
 1562      4C00
 1563              	.LASF96:
 1564 039b 43795F53 		.ascii	"Cy_SCB_UART_Get\000"
 1564      43425F55 
 1564      4152545F 
 1564      47657400 
 1565              	.LASF99:
 1566 03ab 433A5C55 		.ascii	"C:\\Users\\PC\\Desktop\\WorkspaceLab10.cydsn\\Blank"
 1566      73657273 
 1566      5C50435C 
 1566      4465736B 
 1566      746F705C 
 1567 03d9 2D323032 		.ascii	"-20240329T070651Z-001\\Blank\\Psoc6E-INK DISPLAY.cy"
 1567      34303332 
 1567      39543037 
 1567      30363531 
 1567      5A2D3030 
 1568 040a 64736E00 		.ascii	"dsn\000"
 1569              	.LASF32:
 1570 040e 4932435F 		.ascii	"I2C_CFG\000"
 1570      43464700 
 1571              	.LASF3:
 1572 0416 73686F72 		.ascii	"short unsigned int\000"
 1572      7420756E 
 1572      7369676E 
 1572      65642069 
 1572      6E7400
 1573              	.LASF65:
 1574 0429 494E5452 		.ascii	"INTR_M\000"
 1574      5F4D00
 1575              	.LASF86:
 1576 0430 63686172 		.ascii	"char\000"
 1576      00
 1577              	.LASF36:
 1578 0435 54585F43 		.ascii	"TX_CTRL\000"
 1578      54524C00 
 1579              	.LASF70:
 1580 043d 494E5452 		.ascii	"INTR_S\000"
 1580      5F5300
 1581              	.LASF48:
 1582 0444 52585F46 		.ascii	"RX_FIFO_RD\000"
 1582      49464F5F 
 1582      524400
 1583              	.LASF5:
 1584 044f 5F5F696E 		.ascii	"__int32_t\000"
 1584      7433325F 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 67


 1584      7400
 1585              	.LASF89:
 1586 0459 5F426F6F 		.ascii	"_Bool\000"
 1586      6C00
 1587              	.LASF44:
 1588 045f 52585F46 		.ascii	"RX_FIFO_STATUS\000"
 1588      49464F5F 
 1588      53544154 
 1588      555300
 1589              	.LASF94:
 1590 046e 64617461 		.ascii	"data\000"
 1590      00
 1591              	.LASF81:
 1592 0473 494E5452 		.ascii	"INTR_RX_SET\000"
 1592      5F52585F 
 1592      53455400 
 1593              	.LASF21:
 1594 047f 52455345 		.ascii	"RESERVED1\000"
 1594      52564544 
 1594      3100
 1595              	.LASF27:
 1596 0489 52455345 		.ascii	"RESERVED2\000"
 1596      52564544 
 1596      3200
 1597              	.LASF33:
 1598 0493 52455345 		.ascii	"RESERVED3\000"
 1598      52564544 
 1598      3300
 1599              	.LASF35:
 1600 049d 52455345 		.ascii	"RESERVED4\000"
 1600      52564544 
 1600      3400
 1601              	.LASF39:
 1602 04a7 52455345 		.ascii	"RESERVED5\000"
 1602      52564544 
 1602      3500
 1603              	.LASF7:
 1604 04b1 6C6F6E67 		.ascii	"long unsigned int\000"
 1604      20756E73 
 1604      69676E65 
 1604      6420696E 
 1604      7400
 1605              	.LASF55:
 1606 04c3 494E5452 		.ascii	"INTR_I2C_EC\000"
 1606      5F493243 
 1606      5F454300 
 1607              	.LASF47:
 1608 04cf 52455345 		.ascii	"RESERVED8\000"
 1608      52564544 
 1608      3800
 1609              	.LASF88:
 1610 04d9 646F7562 		.ascii	"double\000"
 1610      6C6500
 1611              	.LASF60:
 1612 04e0 494E5452 		.ascii	"INTR_SPI_EC\000"
 1612      5F535049 
 1612      5F454300 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 68


 1613              	.LASF46:
 1614 04ec 52585F4D 		.ascii	"RX_MATCH\000"
 1614      41544348 
 1614      00
 1615              	.LASF30:
 1616 04f5 4932435F 		.ascii	"I2C_M_CMD\000"
 1616      4D5F434D 
 1616      4400
 1617              	.LASF98:
 1618 04ff 73746469 		.ascii	"stdio_user.c\000"
 1618      6F5F7573 
 1618      65722E63 
 1618      00
 1619              	.LASF49:
 1620 050c 52585F46 		.ascii	"RX_FIFO_RD_SILENT\000"
 1620      49464F5F 
 1620      52445F53 
 1620      494C454E 
 1620      5400
 1621              	.LASF73:
 1622 051e 494E5452 		.ascii	"INTR_S_MASKED\000"
 1622      5F535F4D 
 1622      41534B45 
 1622      4400
 1623              	.LASF17:
 1624 052c 434D445F 		.ascii	"CMD_RESP_STATUS\000"
 1624      52455350 
 1624      5F535441 
 1624      54555300 
 1625              	.LASF18:
 1626 053c 52455345 		.ascii	"RESERVED\000"
 1626      52564544 
 1626      00
 1627              	.LASF31:
 1628 0545 4932435F 		.ascii	"I2C_S_CMD\000"
 1628      535F434D 
 1628      4400
 1629              	.LASF95:
 1630 054f 43795F53 		.ascii	"Cy_SCB_UART_GetNumInRxFifo\000"
 1630      43425F55 
 1630      4152545F 
 1630      4765744E 
 1630      756D496E 
 1631              	.LASF102:
 1632 056a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1632      52784275 
 1632      66666572 
 1632      00
 1633              	.LASF67:
 1634 0577 494E5452 		.ascii	"INTR_M_MASK\000"
 1634      5F4D5F4D 
 1634      41534B00 
 1635              	.LASF92:
 1636 0583 62617365 		.ascii	"base\000"
 1636      00
 1637              	.LASF58:
 1638 0588 494E5452 		.ascii	"INTR_I2C_EC_MASKED\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccyrmiMe.s 			page 69


 1638      5F493243 
 1638      5F45435F 
 1638      4D41534B 
 1638      454400
 1639              	.LASF29:
 1640 059b 4932435F 		.ascii	"I2C_STATUS\000"
 1640      53544154 
 1640      555300
 1641              	.LASF26:
 1642 05a6 55415254 		.ascii	"UART_FLOW_CTRL\000"
 1642      5F464C4F 
 1642      575F4354 
 1642      524C00
 1643              	.LASF34:
 1644 05b5 44444654 		.ascii	"DDFT_CTRL\000"
 1644      5F435452 
 1644      4C00
 1645              	.LASF43:
 1646 05bf 52585F46 		.ascii	"RX_FIFO_CTRL\000"
 1646      49464F5F 
 1646      4354524C 
 1646      00
 1647              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
